name: ElectricHeater
prefix: com.sonycsl.kadecot.echonetlite
rpc:
  OperationStatusGet:
    procedure: get
    epc: 128
    size: '1'
    announce: undefined
    doc: "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: OperationStatus
  OperationStatusSet:
    procedure: set
    epc: 128
    size: '1'
    announce: undefined
    doc: "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: OperationStatus
      propertyValue:
        type: array
        const: false
        value:
          - 0
  InstallationLocationGet:
    procedure: get
    epc: 129
    size: '1'
    announce: undefined
    doc: "This property indicates the installation location\n\nSee “2.2 ‘Installation location’ property.”\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: InstallationLocation
  InstallationLocationSet:
    procedure: set
    epc: 129
    size: '1'
    announce: undefined
    doc: "This property indicates the installation location\n\nSee “2.2 ‘Installation location’ property.”\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: InstallationLocation
      propertyValue:
        type: array
        const: false
        value:
          - 0
  StandardVersionInformationGet:
    procedure: get
    epc: 130
    size: '4'
    announce: undefined
    doc: "This property indicates the version number of the corresponding standard.\n\nFirst byte: Fixed at 0x00 (for future reserved). \nSecond byte: Fixed at 0x00 (for future reserved). \nThird byte: Indicates the order of release in the ASCII format. \nFourth byte: Fixed at 0x00 (for future reserved).\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StandardVersionInformation
  StandardVersionInformationSet:
    procedure: set
    epc: 130
    size: '4'
    announce: undefined
    doc: "This property indicates the version number of the corresponding standard.\n\nFirst byte: Fixed at 0x00 (for future reserved). \nSecond byte: Fixed at 0x00 (for future reserved). \nThird byte: Indicates the order of release in the ASCII format. \nFourth byte: Fixed at 0x00 (for future reserved).\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StandardVersionInformation
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  IdentificationNumberGet:
    procedure: get
    epc: 131
    size: 9or17
    announce: undefined
    doc: "A number that allows each object to be uniquely identified.\n\nFirst byte: lower-layer communication ID field\n0x01－0xFD：This is a communication protocol used in the lower-layer communication and is set arbitrarily according to the protocol class in the case where unique number is assigned (not used in ECHONET Lite).\n0x11－0x1F: Power line Communication Protocol A and B systems\n0x31-0x3F: Designated low-powor radio\n0x41-0x4F: Extended HBS\n0x51-0x5F: IrDA\n0x61-0x6F: LonTalk®\n0x71-0x7F: BlueTooth\n0x81-0x8F: Ethernet\n0x91-0x9F: IEEE802.11/11B\n0xA1: Power line Communication Protocol C systems\n0xB2：IPv6/6LoWPAN\n0xFE：2－17 bytes are defined by the manufacturer, and are set according to the type.\n0xFF：2－9 bytes are defined when randomly generated protocol is used in the lower-layer communication.\n0x00：Identification number is not set.\nSecond and succeeding bytes: unique number field\n\nData Type : unsigned char\nData Size(Byte) : 9 or 17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: IdentificationNumber
  IdentificationNumberSet:
    procedure: set
    epc: 131
    size: 9or17
    announce: undefined
    doc: "A number that allows each object to be uniquely identified.\n\nFirst byte: lower-layer communication ID field\n0x01－0xFD：This is a communication protocol used in the lower-layer communication and is set arbitrarily according to the protocol class in the case where unique number is assigned (not used in ECHONET Lite).\n0x11－0x1F: Power line Communication Protocol A and B systems\n0x31-0x3F: Designated low-powor radio\n0x41-0x4F: Extended HBS\n0x51-0x5F: IrDA\n0x61-0x6F: LonTalk®\n0x71-0x7F: BlueTooth\n0x81-0x8F: Ethernet\n0x91-0x9F: IEEE802.11/11B\n0xA1: Power line Communication Protocol C systems\n0xB2：IPv6/6LoWPAN\n0xFE：2－17 bytes are defined by the manufacturer, and are set according to the type.\n0xFF：2－9 bytes are defined when randomly generated protocol is used in the lower-layer communication.\n0x00：Identification number is not set.\nSecond and succeeding bytes: unique number field\n\nData Type : unsigned char\nData Size(Byte) : 9 or 17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: IdentificationNumber
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  MeasuredInstantaneousPowerConsumptionGet:
    procedure: get
    epc: 132
    size: '2'
    announce: undefined
    doc: "This property indicates the instantaneous power consumption of the device in watts.\n\n0x0000-0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredInstantaneousPowerConsumption
  MeasuredInstantaneousPowerConsumptionSet:
    procedure: set
    epc: 132
    size: '2'
    announce: undefined
    doc: "This property indicates the instantaneous power consumption of the device in watts.\n\n0x0000-0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredInstantaneousPowerConsumption
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  MeasuredCumulativePowerConsumptionGet:
    procedure: get
    epc: 133
    size: '4'
    announce: undefined
    doc: "This property indicates the cumulative power consumption of the device in increments of 0.001kWh.\n\n0x0-0x3B9AC9FF（0-999,999.999kWh）\n\nData Type : unsigned long\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredCumulativePowerConsumption
  MeasuredCumulativePowerConsumptionSet:
    procedure: set
    epc: 133
    size: '4'
    announce: undefined
    doc: "This property indicates the cumulative power consumption of the device in increments of 0.001kWh.\n\n0x0-0x3B9AC9FF（0-999,999.999kWh）\n\nData Type : unsigned long\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredCumulativePowerConsumption
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  ManufacturersFaultCodeGet:
    procedure: get
    epc: 134
    size: Max225
    announce: undefined
    doc: "This property indicates the manufacturer-defined fault code.\n\nFirst byte: Indicates the data size of the fault code field.\nSecond to fourth bytes: Manufacturer code\nFifth and succeeding bytes: Field for manufacturer-defined fault code\n\nData Type : unsigned char×(MAX)225\nData Size(Byte) : Max 225\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturersFaultCode
  ManufacturersFaultCodeSet:
    procedure: set
    epc: 134
    size: Max225
    announce: undefined
    doc: "This property indicates the manufacturer-defined fault code.\n\nFirst byte: Indicates the data size of the fault code field.\nSecond to fourth bytes: Manufacturer code\nFifth and succeeding bytes: Field for manufacturer-defined fault code\n\nData Type : unsigned char×(MAX)225\nData Size(Byte) : Max 225\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturersFaultCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
  CurrentLimitSettingGet:
    procedure: get
    epc: 135
    size: '1'
    announce: undefined
    doc: "This property indicates the current limit setting (0-100%).\n0x00-0x64 （=0-100%）\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentLimitSetting
  CurrentLimitSettingSet:
    procedure: set
    epc: 135
    size: '1'
    announce: undefined
    doc: "This property indicates the current limit setting (0-100%).\n0x00-0x64 （=0-100%）\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentLimitSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  FaultStatusGet:
    procedure: get
    epc: 136
    size: '1'
    announce: undefined
    doc: "This property indicates whether a fault (e.g. a sensor trouble) has occurred or not.\n\nFault occurred＝0x41, No fault has occurred＝0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: FaultStatus
  FaultStatusSet:
    procedure: set
    epc: 136
    size: '1'
    announce: undefined
    doc: "This property indicates whether a fault (e.g. a sensor trouble) has occurred or not.\n\nFault occurred＝0x41, No fault has occurred＝0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: FaultStatus
      propertyValue:
        type: array
        const: false
        value:
          - 0
  FaultDescriptionGet:
    procedure: get
    epc: 137
    size: '2'
    announce: undefined
    doc: "Describes the fault.\n\nSee “2.5 ‘Fault Description’ Property.”\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: FaultDescription
  FaultDescriptionSet:
    procedure: set
    epc: 137
    size: '2'
    announce: undefined
    doc: "Describes the fault.\n\nSee “2.5 ‘Fault Description’ Property.”\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: FaultDescription
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  ManufacturerCodeGet:
    procedure: get
    epc: 138
    size: '3'
    announce: undefined
    doc: "3-byte manufacturer code\n\n(Defined by the ECHONET Consortium.)\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturerCode
  ManufacturerCodeSet:
    procedure: set
    epc: 138
    size: '3'
    announce: undefined
    doc: "3-byte manufacturer code\n\n(Defined by the ECHONET Consortium.)\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturerCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
  ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCodeGet:
    procedure: get
    epc: 139
    size: '3'
    announce: undefined
    doc: "3-byte business facility code\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCode
  ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCodeSet:
    procedure: set
    epc: 139
    size: '3'
    announce: undefined
    doc: "3-byte business facility code\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
  ProductCodeGet:
    procedure: get
    epc: 140
    size: '12'
    announce: undefined
    doc: "Identifies the product usingASCI I code.\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductCode
  ProductCodeSet:
    procedure: set
    epc: 140
    size: '12'
    announce: undefined
    doc: "Identifies the product usingASCI I code.\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  ProductionNumberGet:
    procedure: get
    epc: 141
    size: '12'
    announce: undefined
    doc: "This property indicates the production number using ASCI I code.\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionNumber
  ProductionNumberSet:
    procedure: set
    epc: 141
    size: '12'
    announce: undefined
    doc: "This property indicates the production number using ASCI I code.\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionNumber
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  ProductionDateGet:
    procedure: get
    epc: 142
    size: '4'
    announce: undefined
    doc: "4-byte production date code\n\nThis property indicates the product ion date in the YYMD format (1 character = 1 byte) .\nYY： Year (e.g. 1999＝ 0x07CF)\nM： Month (e.g. December＝0x0C)\nD： Day (e.g. 20th＝ 0x14)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionDate
  ProductionDateSet:
    procedure: set
    epc: 142
    size: '4'
    announce: undefined
    doc: "4-byte production date code\n\nThis property indicates the product ion date in the YYMD format (1 character = 1 byte) .\nYY： Year (e.g. 1999＝ 0x07CF)\nM： Month (e.g. December＝0x0C)\nD： Day (e.g. 20th＝ 0x14)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionDate
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  PowerSavingOperationSettingGet:
    procedure: get
    epc: 143
    size: '1'
    announce: undefined
    doc: "This property indicates whether the device is operating in power-saving mode.\n\nOperating in power-saving mode =0x41\nOperating in normal operation mode =0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerSavingOperationSetting
  PowerSavingOperationSettingSet:
    procedure: set
    epc: 143
    size: '1'
    announce: undefined
    doc: "This property indicates whether the device is operating in power-saving mode.\n\nOperating in power-saving mode =0x41\nOperating in normal operation mode =0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerSavingOperationSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  PositionInformationGet:
    procedure: get
    epc: 147
    size: '16'
    announce: undefined
    doc: "This property indicates the latitude, longitude and altitude of the installation location.\n\nData Type : unsigned char×16\nData Size(Byte) : 16\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: PositionInformation
  PositionInformationSet:
    procedure: set
    epc: 147
    size: '16'
    announce: undefined
    doc: "This property indicates the latitude, longitude and altitude of the installation location.\n\nData Type : unsigned char×16\nData Size(Byte) : 16\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: PositionInformation
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  CurrentTimeSettingGet:
    procedure: get
    epc: 151
    size: '2'
    announce: undefined
    doc: "Current time (HH：MM format)\n\n0x00-0x17：0x00-0x3B（ ＝ 0-23）：（ ＝ 0-59）\n\nData Type : unsigned char×2\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentTimeSetting
  CurrentTimeSettingSet:
    procedure: set
    epc: 151
    size: '2'
    announce: undefined
    doc: "Current time (HH：MM format)\n\n0x00-0x17：0x00-0x3B（ ＝ 0-23）：（ ＝ 0-59）\n\nData Type : unsigned char×2\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentTimeSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  CurrentDateSettingGet:
    procedure: get
    epc: 152
    size: '4'
    announce: undefined
    doc: "Current date (YYYY：MM：DD format)\n\n1 ～ 0x270F ： 1 ～ 0x0C ： 1 ～ 0x1F (=1 ～ 9999) ： (=1 ～ 12) ： (=1 ～ 31)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentDateSetting
  CurrentDateSettingSet:
    procedure: set
    epc: 152
    size: '4'
    announce: undefined
    doc: "Current date (YYYY：MM：DD format)\n\n1 ～ 0x270F ： 1 ～ 0x0C ： 1 ～ 0x1F (=1 ～ 9999) ： (=1 ～ 12) ： (=1 ～ 31)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentDateSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  PowerLimitSettingGet:
    procedure: get
    epc: 153
    size: '2'
    announce: undefined
    doc: "This property indicates the power limit setting in watts.\n\n0x0000~0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerLimitSetting
  PowerLimitSettingSet:
    procedure: set
    epc: 153
    size: '2'
    announce: undefined
    doc: "This property indicates the power limit setting in watts.\n\n0x0000~0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerLimitSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  CumulativeOperatingTimeGet:
    procedure: get
    epc: 154
    size: '5'
    announce: undefined
    doc: "This property indicates the cumulative number of days, hours, minutes or seconds for which the device has operated, using 1 byte for the unit and 4 bytes for the time.\n\nFirst byte: Indicates the unit.\nSecond： 0x41; Minute： 0x42; Hour： 0x43; Day:0x44\nSecond to fifth bytes ：\nIndicates the elapsed time in the unit specified by the first byte. 0x00000000-0xFFFFFFFF (0-4294967295)\n\nData Type : unsigned char + unsigned long\nData Size(Byte) : 1+4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CumulativeOperatingTime
  CumulativeOperatingTimeSet:
    procedure: set
    epc: 154
    size: '5'
    announce: undefined
    doc: "This property indicates the cumulative number of days, hours, minutes or seconds for which the device has operated, using 1 byte for the unit and 4 bytes for the time.\n\nFirst byte: Indicates the unit.\nSecond： 0x41; Minute： 0x42; Hour： 0x43; Day:0x44\nSecond to fifth bytes ：\nIndicates the elapsed time in the unit specified by the first byte. 0x00000000-0xFFFFFFFF (0-4294967295)\n\nData Type : unsigned char + unsigned long\nData Size(Byte) : 1+4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CumulativeOperatingTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
  StatusChangeAnnouncementPropertyMapGet:
    procedure: get
    epc: 157
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StatusChangeAnnouncementPropertyMap
  StatusChangeAnnouncementPropertyMapSet:
    procedure: set
    epc: 157
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StatusChangeAnnouncementPropertyMap
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SetPropertyMapGet:
    procedure: get
    epc: 158
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: SetPropertyMap
  SetPropertyMapSet:
    procedure: set
    epc: 158
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: SetPropertyMap
      propertyValue:
        type: array
        const: false
        value:
          - 0
  GetPropertyMapGet:
    procedure: get
    epc: 159
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: GetPropertyMap
  GetPropertyMapSet:
    procedure: set
    epc: 159
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: GetPropertyMap
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AutomaticTemperatureControlSettingGet:
    procedure: get
    epc: 177
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the automatic temperature control function.\n\nAutomatic = 0x41, non-automatic = 0x42\n\nName : Automatic temperature control setting\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AutomaticTemperatureControlSetting
  AutomaticTemperatureControlSettingSet:
    procedure: set
    epc: 177
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the automatic temperature control function.\n\nAutomatic = 0x41, non-automatic = 0x42\n\nName : Automatic temperature control setting\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AutomaticTemperatureControlSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  TemperatureSettingGet:
    procedure: get
    epc: 179
    size: '1'
    announce: undefined
    doc: "Used to set the temperature.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : Temperature setting\nEPC : 0xB3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: TemperatureSetting
  TemperatureSettingSet:
    procedure: set
    epc: 179
    size: '1'
    announce: undefined
    doc: "Used to set the temperature.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : Temperature setting\nEPC : 0xB3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: TemperatureSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  MeasuredRoomTemperatureGet:
    procedure: get
    epc: 187
    size: '1'
    announce: undefined
    doc: "This property indicates the measured room temperature.\n\n0x81 to 0x7E (-128 to 127��C)\n\nName : Measured room temperature\nEPC : 0xBB\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredRoomTemperature
  MeasuredRoomTemperatureSet:
    procedure: set
    epc: 187
    size: '1'
    announce: undefined
    doc: "This property indicates the measured room temperature.\n\n0x81 to 0x7E (-128 to 127��C)\n\nName : Measured room temperature\nEPC : 0xBB\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredRoomTemperature
      propertyValue:
        type: array
        const: false
        value:
          - 0
  RemotelySetTemperatureGet:
    procedure: get
    epc: 188
    size: '1'
    announce: undefined
    doc: "This property indicates the last temperature (��C) set by the user using a remote controller unit.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : Remotely set temperature\nEPC : 0xBC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: RemotelySetTemperature
  RemotelySetTemperatureSet:
    procedure: set
    epc: 188
    size: '1'
    announce: undefined
    doc: "This property indicates the last temperature (��C) set by the user using a remote controller unit.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : Remotely set temperature\nEPC : 0xBC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: RemotelySetTemperature
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AirFlowRateSettingGet:
    procedure: get
    epc: 160
    size: '1'
    announce: undefined
    doc: "Used to specify the air flow rate or to specify using the function to automatically control the air flow rate. The air flow rate is selected from among the 8 predefined levels.\n\nAutomatic air flow rate control used = 0x41 Air flow rate = 0x31 to 0x38\n\nName : Air flow rate setting\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirFlowRateSetting
  AirFlowRateSettingSet:
    procedure: set
    epc: 160
    size: '1'
    announce: undefined
    doc: "Used to specify the air flow rate or to specify using the function to automatically control the air flow rate. The air flow rate is selected from among the 8 predefined levels.\n\nAutomatic air flow rate control used = 0x41 Air flow rate = 0x31 to 0x38\n\nName : Air flow rate setting\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirFlowRateSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  OnTimerBasedReservationSettingGet:
    procedure: get
    epc: 144
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the ON timer-based reservation function.\n\nON timer-based reservation function ON: 0x41 ON timer-based reservation function OFF: 0x42\n\nName : ON timer-based reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerBasedReservationSetting
  OnTimerBasedReservationSettingSet:
    procedure: set
    epc: 144
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the ON timer-based reservation function.\n\nON timer-based reservation function ON: 0x41 ON timer-based reservation function OFF: 0x42\n\nName : ON timer-based reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerBasedReservationSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  OnTimerSettingTimeGet:
    procedure: get
    epc: 145
    size: '2'
    announce: undefined
    doc: "Used to specify the time for the ON timer-based reservation function in the HH:MM format.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting (time)\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerSettingTime
  OnTimerSettingTimeSet:
    procedure: set
    epc: 145
    size: '2'
    announce: undefined
    doc: "Used to specify the time for the ON timer-based reservation function in the HH:MM format.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting (time)\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerSettingTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  OnTimerSettingRelativeTimeGet:
    procedure: get
    epc: 146
    size: '2'
    announce: undefined
    doc: "Used to specify the relative time for the ON timer-based reservation function in the HH:MM format\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting (relative time)\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerSettingRelativeTime
  OnTimerSettingRelativeTimeSet:
    procedure: set
    epc: 146
    size: '2'
    announce: undefined
    doc: "Used to specify the relative time for the ON timer-based reservation function in the HH:MM format\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting (relative time)\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerSettingRelativeTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  OffTimerBasedReservationSettingGet:
    procedure: get
    epc: 148
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the OFF timer-based reservation function.\n\nOFF timer-based reservation function ON: 0x41 OFF timer-based reservation function OFF: 0x42\n\nName : OFF timer-based reservation setting\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OffTimerBasedReservationSetting
  OffTimerBasedReservationSettingSet:
    procedure: set
    epc: 148
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the OFF timer-based reservation function.\n\nOFF timer-based reservation function ON: 0x41 OFF timer-based reservation function OFF: 0x42\n\nName : OFF timer-based reservation setting\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OffTimerBasedReservationSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  OffTimerSettingTimeGet:
    procedure: get
    epc: 149
    size: '2'
    announce: undefined
    doc: "Used to specify the time for the OFF timer-based reservation function in the HH:MM format.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : OFF timer setting (time)\nEPC : 0x95\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OffTimerSettingTime
  OffTimerSettingTimeSet:
    procedure: set
    epc: 149
    size: '2'
    announce: undefined
    doc: "Used to specify the time for the OFF timer-based reservation function in the HH:MM format.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : OFF timer setting (time)\nEPC : 0x95\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OffTimerSettingTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  SetValueOfOffTimerRelativeTimeGet:
    procedure: get
    epc: 150
    size: '2'
    announce: undefined
    doc: "Timer value HH:MM\n\n0.0x17: 0.0x3B (= 0.23):(= 0.59)\n\nName : Set value of OFF timer relative time\nEPC : 0x96\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetValueOfOffTimerRelativeTime
  SetValueOfOffTimerRelativeTimeSet:
    procedure: set
    epc: 150
    size: '2'
    announce: undefined
    doc: "Timer value HH:MM\n\n0.0x17: 0.0x3B (= 0.23):(= 0.59)\n\nName : Set value of OFF timer relative time\nEPC : 0x96\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetValueOfOffTimerRelativeTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0

