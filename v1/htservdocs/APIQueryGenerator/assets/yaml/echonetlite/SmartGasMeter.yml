name: SmartGasMeter
prefix: com.sonycsl.kadecot.echonetlite
rpc:
  OperationStatusGet:
    procedure: get
    epc: 128
    size: '1'
    announce: undefined
    doc: "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: OperationStatus
  OperationStatusSet:
    procedure: set
    epc: 128
    size: '1'
    announce: undefined
    doc: "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: OperationStatus
      propertyValue:
        type: array
        const: false
        value:
          - 0
  InstallationLocationGet:
    procedure: get
    epc: 129
    size: '1'
    announce: undefined
    doc: "This property indicates the installation location\n\nSee “2.2 ‘Installation location’ property.”\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: InstallationLocation
  InstallationLocationSet:
    procedure: set
    epc: 129
    size: '1'
    announce: undefined
    doc: "This property indicates the installation location\n\nSee “2.2 ‘Installation location’ property.”\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: InstallationLocation
      propertyValue:
        type: array
        const: false
        value:
          - 0
  StandardVersionInformationGet:
    procedure: get
    epc: 130
    size: '4'
    announce: undefined
    doc: "This property indicates the version number of the corresponding standard.\n\nFirst byte: Fixed at 0x00 (for future reserved). \nSecond byte: Fixed at 0x00 (for future reserved). \nThird byte: Indicates the order of release in the ASCII format. \nFourth byte: Fixed at 0x00 (for future reserved).\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StandardVersionInformation
  StandardVersionInformationSet:
    procedure: set
    epc: 130
    size: '4'
    announce: undefined
    doc: "This property indicates the version number of the corresponding standard.\n\nFirst byte: Fixed at 0x00 (for future reserved). \nSecond byte: Fixed at 0x00 (for future reserved). \nThird byte: Indicates the order of release in the ASCII format. \nFourth byte: Fixed at 0x00 (for future reserved).\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StandardVersionInformation
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  IdentificationNumberGet:
    procedure: get
    epc: 131
    size: 9or17
    announce: undefined
    doc: "A number that allows each object to be uniquely identified.\n\nFirst byte: lower-layer communication ID field\n0x01－0xFD：This is a communication protocol used in the lower-layer communication and is set arbitrarily according to the protocol class in the case where unique number is assigned (not used in ECHONET Lite).\n0x11－0x1F: Power line Communication Protocol A and B systems\n0x31-0x3F: Designated low-powor radio\n0x41-0x4F: Extended HBS\n0x51-0x5F: IrDA\n0x61-0x6F: LonTalk®\n0x71-0x7F: BlueTooth\n0x81-0x8F: Ethernet\n0x91-0x9F: IEEE802.11/11B\n0xA1: Power line Communication Protocol C systems\n0xB2：IPv6/6LoWPAN\n0xFE：2－17 bytes are defined by the manufacturer, and are set according to the type.\n0xFF：2－9 bytes are defined when randomly generated protocol is used in the lower-layer communication.\n0x00：Identification number is not set.\nSecond and succeeding bytes: unique number field\n\nData Type : unsigned char\nData Size(Byte) : 9 or 17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: IdentificationNumber
  IdentificationNumberSet:
    procedure: set
    epc: 131
    size: 9or17
    announce: undefined
    doc: "A number that allows each object to be uniquely identified.\n\nFirst byte: lower-layer communication ID field\n0x01－0xFD：This is a communication protocol used in the lower-layer communication and is set arbitrarily according to the protocol class in the case where unique number is assigned (not used in ECHONET Lite).\n0x11－0x1F: Power line Communication Protocol A and B systems\n0x31-0x3F: Designated low-powor radio\n0x41-0x4F: Extended HBS\n0x51-0x5F: IrDA\n0x61-0x6F: LonTalk®\n0x71-0x7F: BlueTooth\n0x81-0x8F: Ethernet\n0x91-0x9F: IEEE802.11/11B\n0xA1: Power line Communication Protocol C systems\n0xB2：IPv6/6LoWPAN\n0xFE：2－17 bytes are defined by the manufacturer, and are set according to the type.\n0xFF：2－9 bytes are defined when randomly generated protocol is used in the lower-layer communication.\n0x00：Identification number is not set.\nSecond and succeeding bytes: unique number field\n\nData Type : unsigned char\nData Size(Byte) : 9 or 17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: IdentificationNumber
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  MeasuredInstantaneousPowerConsumptionGet:
    procedure: get
    epc: 132
    size: '2'
    announce: undefined
    doc: "This property indicates the instantaneous power consumption of the device in watts.\n\n0x0000-0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredInstantaneousPowerConsumption
  MeasuredInstantaneousPowerConsumptionSet:
    procedure: set
    epc: 132
    size: '2'
    announce: undefined
    doc: "This property indicates the instantaneous power consumption of the device in watts.\n\n0x0000-0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredInstantaneousPowerConsumption
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  MeasuredCumulativePowerConsumptionGet:
    procedure: get
    epc: 133
    size: '4'
    announce: undefined
    doc: "This property indicates the cumulative power consumption of the device in increments of 0.001kWh.\n\n0x0-0x3B9AC9FF（0-999,999.999kWh）\n\nData Type : unsigned long\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredCumulativePowerConsumption
  MeasuredCumulativePowerConsumptionSet:
    procedure: set
    epc: 133
    size: '4'
    announce: undefined
    doc: "This property indicates the cumulative power consumption of the device in increments of 0.001kWh.\n\n0x0-0x3B9AC9FF（0-999,999.999kWh）\n\nData Type : unsigned long\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredCumulativePowerConsumption
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  ManufacturersFaultCodeGet:
    procedure: get
    epc: 134
    size: Max225
    announce: undefined
    doc: "This property indicates the manufacturer-defined fault code.\n\nFirst byte: Indicates the data size of the fault code field.\nSecond to fourth bytes: Manufacturer code\nFifth and succeeding bytes: Field for manufacturer-defined fault code\n\nData Type : unsigned char×(MAX)225\nData Size(Byte) : Max 225\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturersFaultCode
  ManufacturersFaultCodeSet:
    procedure: set
    epc: 134
    size: Max225
    announce: undefined
    doc: "This property indicates the manufacturer-defined fault code.\n\nFirst byte: Indicates the data size of the fault code field.\nSecond to fourth bytes: Manufacturer code\nFifth and succeeding bytes: Field for manufacturer-defined fault code\n\nData Type : unsigned char×(MAX)225\nData Size(Byte) : Max 225\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturersFaultCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
  CurrentLimitSettingGet:
    procedure: get
    epc: 135
    size: '1'
    announce: undefined
    doc: "This property indicates the current limit setting (0-100%).\n0x00-0x64 （=0-100%）\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentLimitSetting
  CurrentLimitSettingSet:
    procedure: set
    epc: 135
    size: '1'
    announce: undefined
    doc: "This property indicates the current limit setting (0-100%).\n0x00-0x64 （=0-100%）\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentLimitSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  FaultStatusGet:
    procedure: get
    epc: 136
    size: '1'
    announce: undefined
    doc: "This property indicates whether a fault (e.g. a sensor trouble) has occurred or not.\n\nFault occurred＝0x41, No fault has occurred＝0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: FaultStatus
  FaultStatusSet:
    procedure: set
    epc: 136
    size: '1'
    announce: undefined
    doc: "This property indicates whether a fault (e.g. a sensor trouble) has occurred or not.\n\nFault occurred＝0x41, No fault has occurred＝0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: FaultStatus
      propertyValue:
        type: array
        const: false
        value:
          - 0
  FaultDescriptionGet:
    procedure: get
    epc: 137
    size: '2'
    announce: undefined
    doc: "Describes the fault.\n\nSee “2.5 ‘Fault Description’ Property.”\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: FaultDescription
  FaultDescriptionSet:
    procedure: set
    epc: 137
    size: '2'
    announce: undefined
    doc: "Describes the fault.\n\nSee “2.5 ‘Fault Description’ Property.”\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: FaultDescription
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  ManufacturerCodeGet:
    procedure: get
    epc: 138
    size: '3'
    announce: undefined
    doc: "3-byte manufacturer code\n\n(Defined by the ECHONET Consortium.)\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturerCode
  ManufacturerCodeSet:
    procedure: set
    epc: 138
    size: '3'
    announce: undefined
    doc: "3-byte manufacturer code\n\n(Defined by the ECHONET Consortium.)\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturerCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
  ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCodeGet:
    procedure: get
    epc: 139
    size: '3'
    announce: undefined
    doc: "3-byte business facility code\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCode
  ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCodeSet:
    procedure: set
    epc: 139
    size: '3'
    announce: undefined
    doc: "3-byte business facility code\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
  ProductCodeGet:
    procedure: get
    epc: 140
    size: '12'
    announce: undefined
    doc: "Identifies the product usingASCI I code.\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductCode
  ProductCodeSet:
    procedure: set
    epc: 140
    size: '12'
    announce: undefined
    doc: "Identifies the product usingASCI I code.\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  ProductionNumberGet:
    procedure: get
    epc: 141
    size: '12'
    announce: undefined
    doc: "This property indicates the production number using ASCI I code.\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionNumber
  ProductionNumberSet:
    procedure: set
    epc: 141
    size: '12'
    announce: undefined
    doc: "This property indicates the production number using ASCI I code.\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionNumber
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  ProductionDateGet:
    procedure: get
    epc: 142
    size: '4'
    announce: undefined
    doc: "4-byte production date code\n\nThis property indicates the product ion date in the YYMD format (1 character = 1 byte) .\nYY： Year (e.g. 1999＝ 0x07CF)\nM： Month (e.g. December＝0x0C)\nD： Day (e.g. 20th＝ 0x14)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionDate
  ProductionDateSet:
    procedure: set
    epc: 142
    size: '4'
    announce: undefined
    doc: "4-byte production date code\n\nThis property indicates the product ion date in the YYMD format (1 character = 1 byte) .\nYY： Year (e.g. 1999＝ 0x07CF)\nM： Month (e.g. December＝0x0C)\nD： Day (e.g. 20th＝ 0x14)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionDate
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  PowerSavingOperationSettingGet:
    procedure: get
    epc: 143
    size: '1'
    announce: undefined
    doc: "This property indicates whether the device is operating in power-saving mode.\n\nOperating in power-saving mode =0x41\nOperating in normal operation mode =0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerSavingOperationSetting
  PowerSavingOperationSettingSet:
    procedure: set
    epc: 143
    size: '1'
    announce: undefined
    doc: "This property indicates whether the device is operating in power-saving mode.\n\nOperating in power-saving mode =0x41\nOperating in normal operation mode =0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerSavingOperationSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  PositionInformationGet:
    procedure: get
    epc: 147
    size: '16'
    announce: undefined
    doc: "This property indicates the latitude, longitude and altitude of the installation location.\n\nData Type : unsigned char×16\nData Size(Byte) : 16\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: PositionInformation
  PositionInformationSet:
    procedure: set
    epc: 147
    size: '16'
    announce: undefined
    doc: "This property indicates the latitude, longitude and altitude of the installation location.\n\nData Type : unsigned char×16\nData Size(Byte) : 16\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: PositionInformation
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  CurrentTimeSettingGet:
    procedure: get
    epc: 151
    size: '2'
    announce: undefined
    doc: "Current time (HH：MM format)\n\n0x00-0x17：0x00-0x3B（ ＝ 0-23）：（ ＝ 0-59）\n\nData Type : unsigned char×2\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentTimeSetting
  CurrentTimeSettingSet:
    procedure: set
    epc: 151
    size: '2'
    announce: undefined
    doc: "Current time (HH：MM format)\n\n0x00-0x17：0x00-0x3B（ ＝ 0-23）：（ ＝ 0-59）\n\nData Type : unsigned char×2\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentTimeSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  CurrentDateSettingGet:
    procedure: get
    epc: 152
    size: '4'
    announce: undefined
    doc: "Current date (YYYY：MM：DD format)\n\n1 ～ 0x270F ： 1 ～ 0x0C ： 1 ～ 0x1F (=1 ～ 9999) ： (=1 ～ 12) ： (=1 ～ 31)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentDateSetting
  CurrentDateSettingSet:
    procedure: set
    epc: 152
    size: '4'
    announce: undefined
    doc: "Current date (YYYY：MM：DD format)\n\n1 ～ 0x270F ： 1 ～ 0x0C ： 1 ～ 0x1F (=1 ～ 9999) ： (=1 ～ 12) ： (=1 ～ 31)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentDateSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  PowerLimitSettingGet:
    procedure: get
    epc: 153
    size: '2'
    announce: undefined
    doc: "This property indicates the power limit setting in watts.\n\n0x0000~0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerLimitSetting
  PowerLimitSettingSet:
    procedure: set
    epc: 153
    size: '2'
    announce: undefined
    doc: "This property indicates the power limit setting in watts.\n\n0x0000~0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerLimitSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  CumulativeOperatingTimeGet:
    procedure: get
    epc: 154
    size: '5'
    announce: undefined
    doc: "This property indicates the cumulative number of days, hours, minutes or seconds for which the device has operated, using 1 byte for the unit and 4 bytes for the time.\n\nFirst byte: Indicates the unit.\nSecond： 0x41; Minute： 0x42; Hour： 0x43; Day:0x44\nSecond to fifth bytes ：\nIndicates the elapsed time in the unit specified by the first byte. 0x00000000-0xFFFFFFFF (0-4294967295)\n\nData Type : unsigned char + unsigned long\nData Size(Byte) : 1+4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CumulativeOperatingTime
  CumulativeOperatingTimeSet:
    procedure: set
    epc: 154
    size: '5'
    announce: undefined
    doc: "This property indicates the cumulative number of days, hours, minutes or seconds for which the device has operated, using 1 byte for the unit and 4 bytes for the time.\n\nFirst byte: Indicates the unit.\nSecond： 0x41; Minute： 0x42; Hour： 0x43; Day:0x44\nSecond to fifth bytes ：\nIndicates the elapsed time in the unit specified by the first byte. 0x00000000-0xFFFFFFFF (0-4294967295)\n\nData Type : unsigned char + unsigned long\nData Size(Byte) : 1+4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CumulativeOperatingTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
  StatusChangeAnnouncementPropertyMapGet:
    procedure: get
    epc: 157
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StatusChangeAnnouncementPropertyMap
  StatusChangeAnnouncementPropertyMapSet:
    procedure: set
    epc: 157
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StatusChangeAnnouncementPropertyMap
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SetPropertyMapGet:
    procedure: get
    epc: 158
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: SetPropertyMap
  SetPropertyMapSet:
    procedure: set
    epc: 158
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: SetPropertyMap
      propertyValue:
        type: array
        const: false
        value:
          - 0
  GetPropertyMapGet:
    procedure: get
    epc: 159
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: GetPropertyMap
  GetPropertyMapSet:
    procedure: set
    epc: 159
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: GetPropertyMap
      propertyValue:
        type: array
        const: false
        value:
          - 0
  GasMeterClassificationGet:
    procedure: get
    epc: 224
    size: '1'
    announce: undefined
    doc: "This property indicates the type of the gas meter.\n\n0x30�Fcity gas 0x31�FLP gas 0x32�Fnatural gas 0x33�Fothers\n\nName : Gas meter classification\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: GasMeterClassification
  GasMeterClassificationSet:
    procedure: set
    epc: 224
    size: '1'
    announce: undefined
    doc: "This property indicates the type of the gas meter.\n\n0x30�Fcity gas 0x31�FLP gas 0x32�Fnatural gas 0x33�Fothers\n\nName : Gas meter classification\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: GasMeterClassification
      propertyValue:
        type: array
        const: false
        value:
          - 0
  OwnerClassificationGet:
    procedure: get
    epc: 225
    size: '1'
    announce: undefined
    doc: "This property indicates the type of the owner of the meter.\n\n0x30�Fnot specified 0x31�Fcity gas 0x32�FLP gas 0x33�Fprivate-sector company 0x34�Findividual\n\nName : Owner classification\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OwnerClassification
  OwnerClassificationSet:
    procedure: set
    epc: 225
    size: '1'
    announce: undefined
    doc: "This property indicates the type of the owner of the meter.\n\n0x30�Fnot specified 0x31�Fcity gas 0x32�FLP gas 0x33�Fprivate-sector company 0x34�Findividual\n\nName : Owner classification\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OwnerClassification
      propertyValue:
        type: array
        const: false
        value:
          - 0
  MeasuredCumulativeGasConsumptionGet:
    procedure: get
    epc: 226
    size: '4'
    announce: undefined
    doc: "This property indicates the measured cumulative gas consumption in m3.\n\n0-0x3B9AC9FF (0-999,999,999�j\n\nName : Measured cumulative gas consumption\nEPC : 0xE2\nData Type : unsigned long\nData Size(Byte) : 4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredCumulativeGasConsumption
  MeasuredCumulativeGasConsumptionSet:
    procedure: set
    epc: 226
    size: '4'
    announce: undefined
    doc: "This property indicates the measured cumulative gas consumption in m3.\n\n0-0x3B9AC9FF (0-999,999,999�j\n\nName : Measured cumulative gas consumption\nEPC : 0xE2\nData Type : unsigned long\nData Size(Byte) : 4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredCumulativeGasConsumption
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  UnitForMeasuredCumulativeGasConsumptionsGet:
    procedure: get
    epc: 227
    size: '1'
    announce: undefined
    doc: "This property indicates the unit (multiplying factor) for the measured cumulative gas consumption and the historical data of measured cumulative gas consumptions.\n\n0x00: 1��3 0x01: 0.1��3 0x02: 0.01��3 0x03: 0.001��3�iinitial value�j 0x04: 0.0001��3 0x05: 0.00001��3 0x06: 0.000001��3\n\nName : Unit for measured cumulative gas consumptions\nEPC : 0xE3\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: UnitForMeasuredCumulativeGasConsumptions
  UnitForMeasuredCumulativeGasConsumptionsSet:
    procedure: set
    epc: 227
    size: '1'
    announce: undefined
    doc: "This property indicates the unit (multiplying factor) for the measured cumulative gas consumption and the historical data of measured cumulative gas consumptions.\n\n0x00: 1��3 0x01: 0.1��3 0x02: 0.01��3 0x03: 0.001��3�iinitial value�j 0x04: 0.0001��3 0x05: 0.00001��3 0x06: 0.000001��3\n\nName : Unit for measured cumulative gas consumptions\nEPC : 0xE3\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: UnitForMeasuredCumulativeGasConsumptions
      propertyValue:
        type: array
        const: false
        value:
          - 0
  HistoricalDataOfMeasuredCumulativeGasConsumptionsGet:
    procedure: get
    epc: 228
    size: '194'
    announce: undefined
    doc: "This property indicates the day for which the historical data of measured cumulative gas consumptions is to be retrieved and the historical data of measured cumulative gas consumptions, which consists of 48 pieces of half-hourly data for the preceding 24 hours.\n\n0x0000-0x0063: 0x0-0x3B9AC9FF (0-99) : (0-999,999.999�j\n\nName : Historical data of measured cumulative gas consumptions\nEPC : 0xE4\nData Type : unsigned short �{ unsigned long �~48\nData Size(Byte) : 194 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: HistoricalDataOfMeasuredCumulativeGasConsumptions
  HistoricalDataOfMeasuredCumulativeGasConsumptionsSet:
    procedure: set
    epc: 228
    size: '194'
    announce: undefined
    doc: "This property indicates the day for which the historical data of measured cumulative gas consumptions is to be retrieved and the historical data of measured cumulative gas consumptions, which consists of 48 pieces of half-hourly data for the preceding 24 hours.\n\n0x0000-0x0063: 0x0-0x3B9AC9FF (0-99) : (0-999,999.999�j\n\nName : Historical data of measured cumulative gas consumptions\nEPC : 0xE4\nData Type : unsigned short �{ unsigned long �~48\nData Size(Byte) : 194 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: HistoricalDataOfMeasuredCumulativeGasConsumptions
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  DayForWhichTheHistoricalDataOfMeasuredCumulativeGasConsumptionsIsToBeRetrievedGet:
    procedure: get
    epc: 229
    size: '1'
    announce: undefined
    doc: "This property indicates the day for which the historical data of measured cumulative gas consumptions (which consists of 48 pieces of half-hourly data for the preceding 24 hours) is to be retrieved.\n\n0x00-0x63 ( 0-99) 0: current day 1 - 99: previous day - day that precedes the current day by 99 days\n\nName : Day for which the historical data of measured cumulative gas consumptions is to be retrieved\nEPC : 0xE5\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: DayForWhichTheHistoricalDataOfMeasuredCumulativeGasConsumptionsIsToBeRetrieved
  DayForWhichTheHistoricalDataOfMeasuredCumulativeGasConsumptionsIsToBeRetrievedSet:
    procedure: set
    epc: 229
    size: '1'
    announce: undefined
    doc: "This property indicates the day for which the historical data of measured cumulative gas consumptions (which consists of 48 pieces of half-hourly data for the preceding 24 hours) is to be retrieved.\n\n0x00-0x63 ( 0-99) 0: current day 1 - 99: previous day - day that precedes the current day by 99 days\n\nName : Day for which the historical data of measured cumulative gas consumptions is to be retrieved\nEPC : 0xE5\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: DayForWhichTheHistoricalDataOfMeasuredCumulativeGasConsumptionsIsToBeRetrieved
      propertyValue:
        type: array
        const: false
        value:
          - 0
  DetectionOfAbnormalValueInMeteringDataGet:
    procedure: get
    epc: 230
    size: '1'
    announce: undefined
    doc: "This property indicates whether the meter has detected an abnormal value in the metering data.\n\nAbnormal value detected: 0x41 No abnormal value detected: 0x42\n\nName : Detection of abnormal value in metering data\nEPC : 0xE6\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: DetectionOfAbnormalValueInMeteringData
  DetectionOfAbnormalValueInMeteringDataSet:
    procedure: set
    epc: 230
    size: '1'
    announce: undefined
    doc: "This property indicates whether the meter has detected an abnormal value in the metering data.\n\nAbnormal value detected: 0x41 No abnormal value detected: 0x42\n\nName : Detection of abnormal value in metering data\nEPC : 0xE6\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: DetectionOfAbnormalValueInMeteringData
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SecurityDataInformationGet:
    procedure: get
    epc: 231
    size: '10'
    announce: undefined
    doc: "Provides security information about the abnormal states detected by the meter in the form of security data that identifies the abnormal states by means of bit assignment.\n\nFor details, refer to the explanations under (9).\n\nName : Security data information\nEPC : 0xE7\nData Type : unsigned char �~10\nData Size(Byte) : 10 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SecurityDataInformation
  SecurityDataInformationSet:
    procedure: set
    epc: 231
    size: '10'
    announce: undefined
    doc: "Provides security information about the abnormal states detected by the meter in the form of security data that identifies the abnormal states by means of bit assignment.\n\nFor details, refer to the explanations under (9).\n\nName : Security data information\nEPC : 0xE7\nData Type : unsigned char �~10\nData Size(Byte) : 10 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SecurityDataInformation
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  ValveClosureByTheCenterGet:
    procedure: get
    epc: 232
    size: '1'
    announce: undefined
    doc: "This property indicates whether the Center has closed the gas shutoff valve of the meter.\n\nCenter has closed the valve: 0x41 Center has not closed the valve: 0x42\n\nName : Valve closure by the Center\nEPC : 0xE8\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: ValveClosureByTheCenter
  ValveClosureByTheCenterSet:
    procedure: set
    epc: 232
    size: '1'
    announce: undefined
    doc: "This property indicates whether the Center has closed the gas shutoff valve of the meter.\n\nCenter has closed the valve: 0x41 Center has not closed the valve: 0x42\n\nName : Valve closure by the Center\nEPC : 0xE8\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: ValveClosureByTheCenter
      propertyValue:
        type: array
        const: false
        value:
          - 0
  PermissionFromTheCenterToReopenTheValveClosedByTheCenterGet:
    procedure: get
    epc: 233
    size: '1'
    announce: undefined
    doc: "This property indicates whether permission has been given by the Center to reopen the gas shutoff valve of the meter closed by the Center.\n\nPermission has been given by the Center to reopen the gas shutoff valve closed by the Center: 0x41 Permission to reopen the gas shutoff valve closed by the Center has not been given by the Center: 0x42\n\nName : Permission from the Center to reopen the valve closed by the Center\nEPC : 0xE9\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PermissionFromTheCenterToReopenTheValveClosedByTheCenter
  PermissionFromTheCenterToReopenTheValveClosedByTheCenterSet:
    procedure: set
    epc: 233
    size: '1'
    announce: undefined
    doc: "This property indicates whether permission has been given by the Center to reopen the gas shutoff valve of the meter closed by the Center.\n\nPermission has been given by the Center to reopen the gas shutoff valve closed by the Center: 0x41 Permission to reopen the gas shutoff valve closed by the Center has not been given by the Center: 0x42\n\nName : Permission from the Center to reopen the valve closed by the Center\nEPC : 0xE9\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PermissionFromTheCenterToReopenTheValveClosedByTheCenter
      propertyValue:
        type: array
        const: false
        value:
          - 0
  EmergencyClosureOfShutoffValveGet:
    procedure: get
    epc: 234
    size: '1'
    announce: undefined
    doc: "This property indicates whether the gas shutoff valve of the meter has been closed in response to an emergency.\n\nEmergency closure of the shutoff valve has occurred: 0x41 No emergency closure of the shutoff valve has occurred: 0x42\n\nName : Emergency closure of shutoff valve\nEPC : 0xEA\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: EmergencyClosureOfShutoffValve
  EmergencyClosureOfShutoffValveSet:
    procedure: set
    epc: 234
    size: '1'
    announce: undefined
    doc: "This property indicates whether the gas shutoff valve of the meter has been closed in response to an emergency.\n\nEmergency closure of the shutoff valve has occurred: 0x41 No emergency closure of the shutoff valve has occurred: 0x42\n\nName : Emergency closure of shutoff valve\nEPC : 0xEA\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: EmergencyClosureOfShutoffValve
      propertyValue:
        type: array
        const: false
        value:
          - 0
  ShutoffValveStatusGet:
    procedure: get
    epc: 235
    size: '1'
    announce: undefined
    doc: "This property indicates whether the shutoff valve is open or closed.\n\nShutoff valve open: 0x41 Shutoff valve closed: 0x42\n\nName : Shutoff valve status\nEPC : 0xEB\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ShutoffValveStatus
  ShutoffValveStatusSet:
    procedure: set
    epc: 235
    size: '1'
    announce: undefined
    doc: "This property indicates whether the shutoff valve is open or closed.\n\nShutoff valve open: 0x41 Shutoff valve closed: 0x42\n\nName : Shutoff valve status\nEPC : 0xEB\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ShutoffValveStatus
      propertyValue:
        type: array
        const: false
        value:
          - 0
  HistoricalDataOfShutoffReasonsGet:
    procedure: get
    epc: 236
    size: '3'
    announce: undefined
    doc: "This property indicates the reasons for the 3 past shutoff valve-based gas shutoffs by means of bit assignment with one byte used for each of the 3 shutoff reasons. Historical data3�FHistorical data2�FHistorical data 1\n\n0xFF: 0xFF: 0xFF\n\nName : Historical data of shutoff reasons\nEPC : 0xEC\nData Type : unsigned char �~3\nData Size(Byte) : 3 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: HistoricalDataOfShutoffReasons
  HistoricalDataOfShutoffReasonsSet:
    procedure: set
    epc: 236
    size: '3'
    announce: undefined
    doc: "This property indicates the reasons for the 3 past shutoff valve-based gas shutoffs by means of bit assignment with one byte used for each of the 3 shutoff reasons. Historical data3�FHistorical data2�FHistorical data 1\n\n0xFF: 0xFF: 0xFF\n\nName : Historical data of shutoff reasons\nEPC : 0xEC\nData Type : unsigned char �~3\nData Size(Byte) : 3 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: HistoricalDataOfShutoffReasons
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
  IdNumberSettingGet:
    procedure: get
    epc: 237
    size: '6'
    announce: undefined
    doc: "This property indicates the ID number of the meter.\n\n000000-FFFFFF �iInitial .value .: .�g000000�h�j\n\nName : ID number setting\nEPC : 0xED\nData Type : unsigned char\nData Size(Byte) : 6 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: IdNumberSetting
  IdNumberSettingSet:
    procedure: set
    epc: 237
    size: '6'
    announce: undefined
    doc: "This property indicates the ID number of the meter.\n\n000000-FFFFFF �iInitial .value .: .�g000000�h�j\n\nName : ID number setting\nEPC : 0xED\nData Type : unsigned char\nData Size(Byte) : 6 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: IdNumberSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  VerificationExpirationInformationGet:
    procedure: get
    epc: 238
    size: '6'
    announce: undefined
    doc: "This property indicates the month and year in which the verification of the meter will expire.\n\nYYYYMM YYYY�iYear�j�CMM�iMonth�j\n\nName : Verification expiration information\nEPC : 0xEE\nData Type : unsigned char\nData Size(Byte) : 6 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: VerificationExpirationInformation
  VerificationExpirationInformationSet:
    procedure: set
    epc: 238
    size: '6'
    announce: undefined
    doc: "This property indicates the month and year in which the verification of the meter will expire.\n\nYYYYMM YYYY�iYear�j�CMM�iMonth�j\n\nName : Verification expiration information\nEPC : 0xEE\nData Type : unsigned char\nData Size(Byte) : 6 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: VerificationExpirationInformation
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0

