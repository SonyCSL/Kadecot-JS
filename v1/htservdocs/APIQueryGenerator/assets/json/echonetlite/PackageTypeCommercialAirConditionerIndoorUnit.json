{
	"name":"PackageTypeCommercialAirConditionerIndoorUnit","methods":[
		{"name":"OperationStatus","epc":"0x80","size":"1","announce":"undefined","set":"undefined","get":"mandatory","doc":"This property indicates the ON/OFF status.<br><br>ON＝0x30，OFF＝0x31<br><br>Data Type : unsigned char<br>Data Size(Byte) : 1<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : mandatory<br><br>Announcement at status change<br>"},
		{"name":"InstallationLocation","epc":"0x81","size":"1","announce":"undefined","set":"mandatory","get":"mandatory","doc":"This property indicates the installation location<br><br>See “2.2 ‘Installation location’ property.”<br><br>Data Type : unsigned char<br>Data Size(Byte) : 1<br><br>AccessRule<br>Announce : undefined<br>Set : mandatory<br>Get : mandatory<br><br>Announcement at status change<br>"},
		{"name":"StandardVersionInformation","epc":"0x82","size":"4","announce":"undefined","set":"undefined","get":"mandatory","doc":"This property indicates the version number of the corresponding standard.<br><br>First byte: Fixed at 0x00 (for future reserved). <br>Second byte: Fixed at 0x00 (for future reserved). <br>Third byte: Indicates the order of release in the ASCII format. <br>Fourth byte: Fixed at 0x00 (for future reserved).<br><br>Data Type : unsigned char×4<br>Data Size(Byte) : 4<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br>"},
		{"name":"IdentificationNumber","epc":"0x83","size":"9or17","announce":"undefined","set":"undefined","get":"optional","doc":"A number that allows each object to be uniquely identified.<br><br>First byte: lower-layer communication ID field<br>0x01－0xFD：This is a communication protocol used in the lower-layer communication and is set arbitrarily according to the protocol class in the case where unique number is assigned (not used in ECHONET Lite).<br>0x11－0x1F: Power line Communication Protocol A and B systems<br>0x31-0x3F: Designated low-powor radio<br>0x41-0x4F: Extended HBS<br>0x51-0x5F: IrDA<br>0x61-0x6F: LonTalk®<br>0x71-0x7F: BlueTooth<br>0x81-0x8F: Ethernet<br>0x91-0x9F: IEEE802.11/11B<br>0xA1: Power line Communication Protocol C systems<br>0xB2：IPv6/6LoWPAN<br>0xFE：2－17 bytes are defined by the manufacturer, and are set according to the type.<br>0xFF：2－9 bytes are defined when randomly generated protocol is used in the lower-layer communication.<br>0x00：Identification number is not set.<br>Second and succeeding bytes: unique number field<br><br>Data Type : unsigned char<br>Data Size(Byte) : 9 or 17<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"MeasuredInstantaneousPowerConsumption","epc":"0x84","size":"2","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the instantaneous power consumption of the device in watts.<br><br>0x0000-0xFFFF（0-65535W）<br><br>Data Type : unsigned short<br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"MeasuredCumulativePowerConsumption","epc":"0x85","size":"4","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the cumulative power consumption of the device in increments of 0.001kWh.<br><br>0x0-0x3B9AC9FF（0-999,999.999kWh）<br><br>Data Type : unsigned long<br>Data Size(Byte) : 4<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ManufacturersFaultCode","epc":"0x86","size":"Max225","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the manufacturer-defined fault code.<br><br>First byte: Indicates the data size of the fault code field.<br>Second to fourth bytes: Manufacturer code<br>Fifth and succeeding bytes: Field for manufacturer-defined fault code<br><br>Data Type : unsigned char×(MAX)225<br>Data Size(Byte) : Max 225<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"CurrentLimitSetting","epc":"0x87","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"This property indicates the current limit setting (0-100%).<br>0x00-0x64 （=0-100%）<br><br>Data Type : unsigned char<br>Data Size(Byte) : 1<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"FaultStatus","epc":"0x88","size":"1","announce":"undefined","set":"undefined","get":"mandatory","doc":"This property indicates whether a fault (e.g. a sensor trouble) has occurred or not.<br><br>Fault occurred＝0x41, No fault has occurred＝0x42<br><br>Data Type : unsigned char<br>Data Size(Byte) : 1<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br><br>Announcement at status change<br>"},
		{"name":"FaultDescription","epc":"0x89","size":"2","announce":"undefined","set":"undefined","get":"optional","doc":"Describes the fault.<br><br>See “2.5 ‘Fault Description’ Property.”<br><br>Data Type : unsigned short<br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ManufacturerCode","epc":"0x8A","size":"3","announce":"undefined","set":"undefined","get":"mandatory","doc":"3-byte manufacturer code<br><br>(Defined by the ECHONET Consortium.)<br><br>Data Type : unsigned char×3<br>Data Size(Byte) : 3<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br>"},
		{"name":"￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCode","epc":"0x8B","size":"3","announce":"undefined","set":"undefined","get":"optional","doc":"3-byte business facility code<br><br>（Defined by each manufacturer.）<br><br>Data Type : unsigned char×3<br>Data Size(Byte) : 3<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ProductCode","epc":"0x8C","size":"12","announce":"undefined","set":"undefined","get":"optional","doc":"Identifies the product usingASCI I code.<br>（Defined by each manufacturer.）<br><br>Data Type : unsigned char×12<br>Data Size(Byte) : 12<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ProductionNumber","epc":"0x8D","size":"12","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the production number using ASCI I code.<br><br>（Defined by each manufacturer.）<br><br>Data Type : unsigned char×12<br>Data Size(Byte) : 12<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ProductionDate","epc":"0x8E","size":"4","announce":"undefined","set":"undefined","get":"optional","doc":"4-byte production date code<br><br>This property indicates the product ion date in the YYMD format (1 character = 1 byte) .<br>YY： Year (e.g. 1999＝ 0x07CF)<br>M： Month (e.g. December＝0x0C)<br>D： Day (e.g. 20th＝ 0x14)<br><br>Data Type : unsigned char×4<br>Data Size(Byte) : 4<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"PowerSavingOperationSetting","epc":"0x8F","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"This property indicates whether the device is operating in power-saving mode.<br><br>Operating in power-saving mode =0x41<br>Operating in normal operation mode =0x42<br><br>Data Type : unsigned char<br>Data Size(Byte) : 1<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"PositionInformation","epc":"0x93","size":"16","announce":"undefined","set":"optional","get":"optional","doc":"This property indicates the latitude, longitude and altitude of the installation location.<br><br>Data Type : unsigned char×16<br>Data Size(Byte) : 16<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br><br>Announcement at status change<br>"},
		{"name":"CurrentTimeSetting","epc":"0x97","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Current time (HH：MM format)<br><br>0x00-0x17：0x00-0x3B（ ＝ 0-23）：（ ＝ 0-59）<br><br>Data Type : unsigned char×2<br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"CurrentDateSetting","epc":"0x98","size":"4","announce":"undefined","set":"optional","get":"optional","doc":"Current date (YYYY：MM：DD format)<br><br>1 ～ 0x270F ： 1 ～ 0x0C ： 1 ～ 0x1F (=1 ～ 9999) ： (=1 ～ 12) ： (=1 ～ 31)<br><br>Data Type : unsigned char×4<br>Data Size(Byte) : 4<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"PowerLimitSetting","epc":"0x99","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"This property indicates the power limit setting in watts.<br><br>0x0000~0xFFFF（0-65535W）<br><br>Data Type : unsigned short<br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"CumulativeOperatingTime","epc":"0x9A","size":"5","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the cumulative number of days, hours, minutes or seconds for which the device has operated, using 1 byte for the unit and 4 bytes for the time.<br><br>First byte: Indicates the unit.<br>Second： 0x41; Minute： 0x42; Hour： 0x43; Day:0x44<br>Second to fifth bytes ：<br>Indicates the elapsed time in the unit specified by the first byte. 0x00000000-0xFFFFFFFF (0-4294967295)<br><br>Data Type : unsigned char + unsigned long<br>Data Size(Byte) : 1+4 Byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"StatusChangeAnnouncementPropertyMap","epc":"0x9D","size":"Max17","announce":"undefined","set":"undefined","get":"mandatory","doc":"See Appendix 1.<br><br>Data Type : unsigned char×(MAX17)<br>Data Size(Byte) : Max.17<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br>"},
		{"name":"SetPropertyMap","epc":"0x9E","size":"Max17","announce":"undefined","set":"undefined","get":"mandatory","doc":"See Appendix 1.<br><br>Data Type : unsigned char×(MAX17)<br>Data Size(Byte) : Max.17<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br>"},
		{"name":"GetPropertyMap","epc":"0x9F","size":"Max17","announce":"undefined","set":"undefined","get":"mandatory","doc":"See Appendix 1.<br><br>Data Type : unsigned char×(MAX17)<br>Data Size(Byte) : Max.17<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br>"},
		{"name":"OperationModeSetting","epc":"0xB0","size":"1","announce":"undefined","set":"mandatory","get":"mandatory","doc":"Used to specify the operation mode (�gautomatic,�h .�gcooling,�h .�gheating,�h . �gdehumidification�h .or .�gair . circulator�h) .and .to .acquire .the .current . setting.<br><br>The following values shall be used: Automatic: 0x41 Cooling: 0x42 Heating: 0x43 Dehumidification: 0x44 Air circulator: 0x45<br><br>Name : Operation mode setting<br>EPC : 0xB0<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : mandatory<br>Get : mandatory<br><br>Announcement at status change<br>"},
		{"name":"TemperatureSetting1","epc":"0xB3","size":"1","announce":"undefined","set":"mandatory","get":"mandatory","doc":"Used to set the temperature and to acquire the current setting.<br><br>0x00 to 0x32 (0 to 50��C)<br><br>Name : Temperature setting 1<br>EPC : 0xB3<br>Data Type : signed char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : mandatory<br>Get : mandatory<br><br>Announcement at status change<br>"},
		{"name":"GrelativeHumiditySettingForEdehumidificaTionFModeH1","epc":"0xB4","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to set the relative humidity for the .�gdehumidification�h .mode .and .to . acquire the current setting.<br><br>0x00 to 0x64 (0 to 100%)<br><br>Name : �gRelative . humidity setting for �edehumidifica- tion�f .mode�h .1<br>EPC : 0xB4<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br><br>Announcement at status change<br>"},
		{"name":"GtemperatureSettingForEcoolingFModeH1","epc":"0xB5","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to set the temperature for the �gcooling�h .mode .and .to .acquire .the . current setting.<br><br>0x00 to 0x32 (0 to 50��C)<br><br>Name : �gTemperature . setting for �ecooling�f .mode�h . 1<br>EPC : 0xB5<br>Data Type : signed char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"GtemperatureSettingForEheatingFModeH1","epc":"0xB6","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to set the temperature for the �gheating�h .mode .and .to .acquire .the . current setting.<br><br>0x00 to 0x32 (0 to 50��C)<br><br>Name : �gTemperature . setting for �eheating�f .mode�h . 1<br>EPC : 0xB6<br>Data Type : signed char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"GtemperatureSettingForEdehumidificaTionFModeH1","epc":"0xB7","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to set the temperature for the �gdehumidification�h .mode .and .to . acquire the current setting.<br><br>0x00 to 0x32 (0 to 50��C)<br><br>Name : �gTemperature . setting for �edehumidifica- tion�f .mode�h .1<br>EPC : 0xB7<br>Data Type : signed char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"RatedPowerConsumptionOfIndoorUnit","epc":"0xB8","size":"8","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the rated power consumption for the cooling, heating, dehumidification and air circulator modes.<br><br>0x0000 to 0xFFFD (0 to 65533W) Cooling: heating: dehumidification: air circulator<br><br>Name : Rated power consumption of indoor unit<br>EPC : 0xB8<br>Data Type : unsigned short x 4<br>Data Size(Byte) : 8 bytes<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"MeasuredElectricCurrentConsumptionOfIndoorUnit","epc":"0xB9","size":"2","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the measured electric current consumption.<br><br>0x0000 to 0xFFFD (0 to 6553.3A)<br><br>Name : Measured electric current consumption of indoor unit<br>EPC : 0xB9<br>Data Type : unsigned short<br>Data Size(Byte) : 2 bytes<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"MeasuredIndoorRelativeHumidity1","epc":"0xBA","size":"1","announce":"undefined","set":"undefined","get":"optional","doc":"Used to acquire the measured indoor relative humidity.<br><br>0x00 to 0x64 (0 to 100%)<br><br>Name : Measured indoor relative humidity 1<br>EPC : 0xBA<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"MeasuredIndoorTemperature1","epc":"0xBB","size":"1","announce":"undefined","set":"undefined","get":"optional","doc":"Used to acquire the measured indoor temperature.<br><br>0x81 to 0x7D (-127 to 125��C)<br><br>Name : Measured indoor temperature 1<br>EPC : 0xBB<br>Data Type : signed char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"RelativeTemperatureSetting","epc":"0xBF","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to set the relative temperature relative to the target temperature for an air conditioner operation mode and to acquire the current setting.<br><br>0x81 to 0x7D (-12.7��C to 12.5��C)<br><br>Name : Relative temperature setting<br>EPC : 0xBF<br>Data Type : signed char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"AirFlowRateSetting","epc":"0xA0","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the air flow rate or to specify using the function to automatically control the air flow rate, and to acquire the current setting. The air flow rate shall be selected from among the 8 predefined levels.<br><br>Automatic air flow rate control function used = 0x41 Air flow rate = 0x31 to 0x38<br><br>Name : Air flow rate setting<br>EPC : 0xA0<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"GairFlowDirectionVerticalHSetting","epc":"0xA4","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the air flow direction in the vertical plane by selecting a pattern from among the 9 predefined patterns or to specify using the automatic air flow direction control function or automatic air flow swing function, and to acquire the current setting.<br><br>Automatic = 0x31, swing = 0x32 Air flow direction: 0x41 to 0x49 (0x41 and 0x49 shall be used for the uppermost and lowermost directions, respectively.)<br><br>Name : �gAir flow direction (vertical)�h setting<br>EPC : 0xA4<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"GairFlowDirectionHorizontalHSetting","epc":"0xA5","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the air flow direction in the horizontal plane by selecting a pattern from among the 6 predefined patterns or to specify using the automatic air flow direction control function or automatic air flow swing function, and to acquire the current setting.<br><br>Automatic = 0x31, swing = 0x32 Air flow direction: Rightward = 0x41, leftward = 0x42, central = 0x43, rightward and leftward = 0x44<br><br>Name : �gAir flow direction (horizontal)�h setting<br>EPC : 0xA5<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"GspecialHState","epc":"0xAA","size":"1","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates when the air conditioner is in a �gspecial�h state.<br><br>�gNormal operation�h state = 0x40, �gpreheating�h state = 0x42, �gheat removal�h state = 0x43<br><br>Name : �gSpecial�h state<br>EPC : 0xAA<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ThermostatState","epc":"0xAC","size":"1","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the state (ON or OFF) of the thermostat.<br><br>Thermostat ON = 0x41 Thermostat OFF = 0x42<br><br>Name : Thermostat state<br>EPC : 0xAC<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"CurrentFunctionGautomaticHOperationMode","epc":"0xAE","size":"1","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates, when the air conditioner is operating in the �gautomatic�h operation mode, the function (�gcooling,�h �gheating,�h �gdehumidification,�h �gair circulator�h or �gother�h) that is currently being used.<br><br>The following values shall be used: Cooling: 0x42 Heating: 0x43 Dehumidification: 0x44 Air circulator: 0x45 Other: 0x40<br><br>Name : Current function (�gautomatic�h operation mode)<br>EPC : 0xAE<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br><br>Announcement at status change<br>"},
		{"name":"VentilationModeSetting","epc":"0xC0","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the ventilation mode and to acquire the current setting.<br><br>Ordinary ventilation = 0x41, ventilation plus total heat exchanger-based heat exchange = 0x42, automatic control of ventilation (i.e. automatic switching between ordinary ventilation and ventilation plus total heat exchanger-based heat exchange) = 0x43<br><br>Name : Ventilation mode setting<br>EPC : 0xC0<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"CombinedOperationOfIndoorUnitAndTotalHeatExchanger","epc":"0xC1","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify whether or not to use the �gcombined operation of indoor unit and total heat exchanger�h function, and to acquire the current setting.<br><br>�gCombined operation of indoor unit and total heat exchanger�h function used = 0x41 �gCombined operation of indoor unit and total heat exchanger�h function not used= 0x42<br><br>Name : Combined operation of indoor unit and total heat exchanger<br>EPC : 0xC1<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"VentilationAirFlowRateSetting","epc":"0xC2","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the ventilation air flow rate by selecting a level from among the predefined levels and to acquire the current setting.<br><br>Automatic control of ventilation air flow rate = 0x41 Ventilation air flow rate = 0x31 to 0x38<br><br>Name : Ventilation air flow rate setting<br>EPC : 0xC2<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"GdisablingOfAirConditionerHSetting","epc":"0xCD","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify whether or not to disable the air conditioner, and to acquire the current setting.<br><br>Disabled = 0x41, not disabled = 0x42<br><br>Name : �gDisabling of air conditioner�h setting<br>EPC : 0xCD<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"ThermostatSettingOverrideFunction","epc":"0xCE","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify whether or not the air conditioner shall operate ignoring its thermostat setting.<br><br>Normal setting = 0x40, thermostat setting override function ON = 0x41, thermostat setting override function OFF = 0x42<br><br>Name : Thermostat setting override function<br>EPC : 0xCE<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"FilterCleaningReminderLampSetting","epc":"0xCF","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify whether or not to enable the filter cleaning reminder lamp, and to acquire the current setting.<br><br>Enabled = 0x41, disabled = 0x42<br><br>Name : Filter cleaning reminder lamp setting<br>EPC : 0xCF<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br><br>Announcement at status change<br>"},
		{"name":"MeasuredPowerConsumptionOfIndoorUnit","epc":"0xDB","size":"2","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the measured power consumption of the indoor unit.<br><br>0x0000 to 0xFFFD (0 to 65533W)<br><br>Name : Measured power consumption of indoor unit<br>EPC : 0xDB<br>Data Type : unsigned<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ApertureOfExpansionValve","epc":"0xDC","size":"1","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the aperture of the expansion valve in %.<br><br>0 to 0x64 (0 to 100%)<br><br>Name : Aperture of expansion valve<br>EPC : 0xDC<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"TemperatureSetting2","epc":"0xE3","size":"2","announce":"undefined","set":"mandatory","get":"mandatory","doc":"Used to set the temperature and to acquire the current setting.<br><br>0xFE0C to 0x3E8 (-50.0 to 100.0��C)<br><br>Name : Temperature setting 2<br>EPC : 0xE3<br>Data Type : unsigned short<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : mandatory<br>Get : mandatory<br><br>Announcement at status change<br>"},
		{"name":"GrelativeHumiditySettingForEdehumidificatioNFModeH2","epc":"0xE4","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used to set the relative humidity for the �gdehumidification�h mode and to acquire the current setting.<br><br>0x0000 to 0x3E8 (0.0 to 100.0%)<br><br>Name : �gRelative humidity setting for �edehumidificatio n�f mode�h 2<br>EPC : 0xE4<br>Data Type : unsigned short<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br><br>Announcement at status change<br>"},
		{"name":"GtemperatureSettingForEcoolingFModeH2","epc":"0xE5","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used to set the temperature for the �gcooling�h mode and to acquire the current setting.<br><br>0xFE0C to 0x3E8 (-50.0 to 100.0��C)<br><br>Name : �gTemperature setting for �ecooling�f mode�h 2<br>EPC : 0xE5<br>Data Type : unsigned short<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"GtemperatureSettingForEheatingFModeH2","epc":"0xE6","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used to set the temperature for the �gheating�h mode and to acquire the current setting.<br><br>0xFE0C to 0x3E8 (-50.0 to 100.0��C)<br><br>Name : �gTemperature setting for �eheating�f mode�h 2<br>EPC : 0xE6<br>Data Type : unsigned short<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"GtemperatureSettingForEdehumidificatioNFModeH2","epc":"0xE7","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used to set the temperature for the �gdehumidification�h mode and to acquire the current setting.<br><br>0xFE0C to 0x3E8 (-50.0 to 100.0��C)<br><br>Name : �gTemperature setting for �edehumidificatio n�f mode�h 2<br>EPC : 0xE7<br>Data Type : unsigned short<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"MeasuredIndoorRelativeHumidity2","epc":"0xEA","size":"2","announce":"undefined","set":"undefined","get":"optional","doc":"Used to acquire the measured indoor relative humidity.<br><br>0x0000 to 0x3E8 (0.0 to 100.0%)<br><br>Name : Measured indoor relative humidity 2<br>EPC : 0xEA<br>Data Type : unsigned short<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"MeasuredIndoorTemperature2","epc":"0xEB","size":"2","announce":"undefined","set":"undefined","get":"optional","doc":"Used to acquire the measured indoor temperature.<br><br>0xF554 to 0x7FFD (-273,2 to 3276,5��C)<br><br>Name : Measured indoor temperature 2<br>EPC : 0xEB<br>Data Type : unsigned short<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"GonTimerBasedReservationHSetting","epc":"0x90","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify whether or not to use the ON timer (time-based reservation function, relative time-based reservation function or both), and to acquire the current setting.<br><br>Both the time- and relative time-based reservation functions are ON = 0x41, both reservation functions are OFF = 0x42, time-based reservation function is ON = 0x43, relative time-based reservation function is ON = 0x44<br><br>Name : �gON timer-based reservation�h setting<br>EPC : 0x90<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"OnTimerSettingTime","epc":"0x91","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the time for the time-based reservation function in the HH:MM format and to acquire the current setting.<br><br>0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)<br><br>Name : ON timer setting (time)<br>EPC : 0x91<br>Data Type : unsigned char�~2<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"OnTimerSettingRelativeTime","epc":"0x92","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the relative time for the relative time-based reservation function in the HH:MM format and to acquire the current setting.<br><br>0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)<br><br>Name : ON timer setting (relative time)<br>EPC : 0x92<br>Data Type : unsigned char�~2<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"GoffTimerBasedReservationHSetting","epc":"0x94","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify whether or not to use the OFF timer (time-based reservation function, relative time-based reservation function or both), and to acquire the current setting.<br><br>Both the time- and relative time-based reservation functions are ON = 0x41, both reservation functions are OFF = 0x42, time-based reservation function is ON = 0x43, relative time-based reservation function is ON = 0x44<br><br>Name : �gOFF timer-based reservation�h setting<br>EPC : 0x94<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"OffTimerSettingTime","epc":"0x95","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the time for the time-based reservation function in the HH:MM format and to acquire the current setting.<br><br>0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)<br><br>Name : OFF timer setting (time)<br>EPC : 0x95<br>Data Type : unsigned char�~2<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"OffTimerSettingRelativeTime","epc":"0x96","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the relative time for the relative time-based reservation function in the HH:MM format and to acquire the current setting.<br><br>0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)<br><br>Name : OFF timer setting (relative time)<br>EPC : 0x96<br>Data Type : unsigned char�~2<br>Data Size(Byte) : 2 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"}
	]
}