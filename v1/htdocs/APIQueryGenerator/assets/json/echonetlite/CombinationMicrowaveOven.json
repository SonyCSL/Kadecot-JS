{
	"name":"CombinationMicrowaveOven","methods":[
		{"name":"OperationStatus","epc":"0x80","size":"1","announce":"undefined","set":"undefined","get":"mandatory","doc":"This property indicates the ON/OFF status.<br><br>ON＝0x30，OFF＝0x31<br><br>Data Type : unsigned char<br>Data Size(Byte) : 1<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : mandatory<br><br>Announcement at status change<br>"},
		{"name":"InstallationLocation","epc":"0x81","size":"1","announce":"undefined","set":"mandatory","get":"mandatory","doc":"This property indicates the installation location<br><br>See “2.2 ‘Installation location’ property.”<br><br>Data Type : unsigned char<br>Data Size(Byte) : 1<br><br>AccessRule<br>Announce : undefined<br>Set : mandatory<br>Get : mandatory<br><br>Announcement at status change<br>"},
		{"name":"StandardVersionInformation","epc":"0x82","size":"4","announce":"undefined","set":"undefined","get":"mandatory","doc":"This property indicates the version number of the corresponding standard.<br><br>First byte: Fixed at 0x00 (for future reserved). <br>Second byte: Fixed at 0x00 (for future reserved). <br>Third byte: Indicates the order of release in the ASCII format. <br>Fourth byte: Fixed at 0x00 (for future reserved).<br><br>Data Type : unsigned char×4<br>Data Size(Byte) : 4<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br>"},
		{"name":"IdentificationNumber","epc":"0x83","size":"9or17","announce":"undefined","set":"undefined","get":"optional","doc":"A number that allows each object to be uniquely identified.<br><br>First byte: lower-layer communication ID field<br>0x01－0xFD：This is a communication protocol used in the lower-layer communication and is set arbitrarily according to the protocol class in the case where unique number is assigned (not used in ECHONET Lite).<br>0x11－0x1F: Power line Communication Protocol A and B systems<br>0x31-0x3F: Designated low-powor radio<br>0x41-0x4F: Extended HBS<br>0x51-0x5F: IrDA<br>0x61-0x6F: LonTalk®<br>0x71-0x7F: BlueTooth<br>0x81-0x8F: Ethernet<br>0x91-0x9F: IEEE802.11/11B<br>0xA1: Power line Communication Protocol C systems<br>0xB2：IPv6/6LoWPAN<br>0xFE：2－17 bytes are defined by the manufacturer, and are set according to the type.<br>0xFF：2－9 bytes are defined when randomly generated protocol is used in the lower-layer communication.<br>0x00：Identification number is not set.<br>Second and succeeding bytes: unique number field<br><br>Data Type : unsigned char<br>Data Size(Byte) : 9 or 17<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"MeasuredInstantaneousPowerConsumption","epc":"0x84","size":"2","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the instantaneous power consumption of the device in watts.<br><br>0x0000-0xFFFF（0-65535W）<br><br>Data Type : unsigned short<br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"MeasuredCumulativePowerConsumption","epc":"0x85","size":"4","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the cumulative power consumption of the device in increments of 0.001kWh.<br><br>0x0-0x3B9AC9FF（0-999,999.999kWh）<br><br>Data Type : unsigned long<br>Data Size(Byte) : 4<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ManufacturersFaultCode","epc":"0x86","size":"Max225","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the manufacturer-defined fault code.<br><br>First byte: Indicates the data size of the fault code field.<br>Second to fourth bytes: Manufacturer code<br>Fifth and succeeding bytes: Field for manufacturer-defined fault code<br><br>Data Type : unsigned char×(MAX)225<br>Data Size(Byte) : Max 225<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"CurrentLimitSetting","epc":"0x87","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"This property indicates the current limit setting (0-100%).<br>0x00-0x64 （=0-100%）<br><br>Data Type : unsigned char<br>Data Size(Byte) : 1<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"FaultStatus","epc":"0x88","size":"1","announce":"undefined","set":"undefined","get":"mandatory","doc":"This property indicates whether a fault (e.g. a sensor trouble) has occurred or not.<br><br>Fault occurred＝0x41, No fault has occurred＝0x42<br><br>Data Type : unsigned char<br>Data Size(Byte) : 1<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br><br>Announcement at status change<br>"},
		{"name":"FaultDescription","epc":"0x89","size":"2","announce":"undefined","set":"undefined","get":"optional","doc":"Describes the fault.<br><br>See “2.5 ‘Fault Description’ Property.”<br><br>Data Type : unsigned short<br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ManufacturerCode","epc":"0x8A","size":"3","announce":"undefined","set":"undefined","get":"mandatory","doc":"3-byte manufacturer code<br><br>(Defined by the ECHONET Consortium.)<br><br>Data Type : unsigned char×3<br>Data Size(Byte) : 3<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br>"},
		{"name":"￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCode","epc":"0x8B","size":"3","announce":"undefined","set":"undefined","get":"optional","doc":"3-byte business facility code<br><br>（Defined by each manufacturer.）<br><br>Data Type : unsigned char×3<br>Data Size(Byte) : 3<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ProductCode","epc":"0x8C","size":"12","announce":"undefined","set":"undefined","get":"optional","doc":"Identifies the product usingASCI I code.<br>（Defined by each manufacturer.）<br><br>Data Type : unsigned char×12<br>Data Size(Byte) : 12<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ProductionNumber","epc":"0x8D","size":"12","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the production number using ASCI I code.<br><br>（Defined by each manufacturer.）<br><br>Data Type : unsigned char×12<br>Data Size(Byte) : 12<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"ProductionDate","epc":"0x8E","size":"4","announce":"undefined","set":"undefined","get":"optional","doc":"4-byte production date code<br><br>This property indicates the product ion date in the YYMD format (1 character = 1 byte) .<br>YY： Year (e.g. 1999＝ 0x07CF)<br>M： Month (e.g. December＝0x0C)<br>D： Day (e.g. 20th＝ 0x14)<br><br>Data Type : unsigned char×4<br>Data Size(Byte) : 4<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"PowerSavingOperationSetting","epc":"0x8F","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"This property indicates whether the device is operating in power-saving mode.<br><br>Operating in power-saving mode =0x41<br>Operating in normal operation mode =0x42<br><br>Data Type : unsigned char<br>Data Size(Byte) : 1<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"PositionInformation","epc":"0x93","size":"16","announce":"undefined","set":"optional","get":"optional","doc":"This property indicates the latitude, longitude and altitude of the installation location.<br><br>Data Type : unsigned char×16<br>Data Size(Byte) : 16<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br><br>Announcement at status change<br>"},
		{"name":"CurrentTimeSetting","epc":"0x97","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Current time (HH：MM format)<br><br>0x00-0x17：0x00-0x3B（ ＝ 0-23）：（ ＝ 0-59）<br><br>Data Type : unsigned char×2<br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"CurrentDateSetting","epc":"0x98","size":"4","announce":"undefined","set":"optional","get":"optional","doc":"Current date (YYYY：MM：DD format)<br><br>1 ～ 0x270F ： 1 ～ 0x0C ： 1 ～ 0x1F (=1 ～ 9999) ： (=1 ～ 12) ： (=1 ～ 31)<br><br>Data Type : unsigned char×4<br>Data Size(Byte) : 4<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"PowerLimitSetting","epc":"0x99","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"This property indicates the power limit setting in watts.<br><br>0x0000~0xFFFF（0-65535W）<br><br>Data Type : unsigned short<br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"CumulativeOperatingTime","epc":"0x9A","size":"5","announce":"undefined","set":"undefined","get":"optional","doc":"This property indicates the cumulative number of days, hours, minutes or seconds for which the device has operated, using 1 byte for the unit and 4 bytes for the time.<br><br>First byte: Indicates the unit.<br>Second： 0x41; Minute： 0x42; Hour： 0x43; Day:0x44<br>Second to fifth bytes ：<br>Indicates the elapsed time in the unit specified by the first byte. 0x00000000-0xFFFFFFFF (0-4294967295)<br><br>Data Type : unsigned char + unsigned long<br>Data Size(Byte) : 1+4 Byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"StatusChangeAnnouncementPropertyMap","epc":"0x9D","size":"Max17","announce":"undefined","set":"undefined","get":"mandatory","doc":"See Appendix 1.<br><br>Data Type : unsigned char×(MAX17)<br>Data Size(Byte) : Max.17<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br>"},
		{"name":"SetPropertyMap","epc":"0x9E","size":"Max17","announce":"undefined","set":"undefined","get":"mandatory","doc":"See Appendix 1.<br><br>Data Type : unsigned char×(MAX17)<br>Data Size(Byte) : Max.17<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br>"},
		{"name":"GetPropertyMap","epc":"0x9F","size":"Max17","announce":"undefined","set":"undefined","get":"mandatory","doc":"See Appendix 1.<br><br>Data Type : unsigned char×(MAX17)<br>Data Size(Byte) : Max.17<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : mandatory<br>"},
		{"name":"DoorOpenCloseStatus","epc":"0xB0","size":"1","announce":"undefined","set":"undefined","get":"optional","doc":"Used to acquire the status (i.e. open or closed) of the door of the combination microwave oven.<br><br>Door open = 0x41, door closed = 0x42<br><br>Name : Door open/close status<br>EPC : 0xB0<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"HeatingStatus","epc":"0xB1","size":"1","announce":"undefined","set":"undefined","get":"optional","doc":"Used to acquire the status of the combination microwave oven.<br><br>Initial state = 0x40 Heating = 0x41 Heating suspended = 0x42 Reporting completion of heating cycle = 0x43 Setting = 0x44 Preheating = 0x45 Preheat temperature maintenance = 0x46 Heating temporarily stopped for manual cooking action = 0x47<br><br>Name : Heating status<br>EPC : 0xB1<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : undefined<br>Get : optional<br>"},
		{"name":"HeatingSetting","epc":"0xB2","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify whether to start, stop or suspend heating, and to acquire the current setting (i.e. current heating status).<br><br>Start/restart heating (heating started/restarted) = 0x41 Suspend heating (heating suspended) = 0x42 Stop heating (heating stopped) = 0x43<br><br>Name : Heating setting<br>EPC : 0xB2<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"HeatingModeSetting","epc":"0xE0","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the heating mode of the combination microwave oven, and to acquire the current setting (i.e. current mode).<br><br>Microwave heating = 0x41 Defrosting = 0x42 Oven = 0x43 Grill = 0x44 Toaster = 0x45 Fermenting = 0x46 Stewing = 0x47 Steaming = 0x48 Two-stage microwave heating = 0x51 No mode specified = 0xFF<br><br>Name : Heating mode setting<br>EPC : 0xE0<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"AutomaticHeatingSetting","epc":"0xE1","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify whether or not to use the combination microwave oven�fs automatic heating mode, and to acquire the current setting.<br><br>Automatic = 0x41 Manual = 0x42 Not specified = 0xFF<br><br>Name : Automatic heating setting<br>EPC : 0xE1<br>Data Type : unsigned char<br>Data Size(Byte) : 1 byte<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"AutomaticHeatingLevelSetting","epc":"0xE2","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify, by selecting a level from among the five predefined levels, the level of automatic heating for the option specified by the �gautomatic heating menu setting�h property, and to acquire the current setting.<br><br>0x31 to 0x35 (lowest to highest) Not specified = 0xFF<br><br>Name : Automatic heating level setting<br>EPC : 0xE2<br>Data Type : unsigned cha<br>Data Size(Byte) : 1 bytes<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"AutomaticHeatingMenuSetting","epc":"0xD0","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used, when the value of the �gautomatic heating setting�h property is 0x41 (= automatic heating), to select an automatic heating cycle, and to acquire the current setting.<br><br>0 to 0xFE: Automatic heating cycle code (See the automatic heating cycle code table in the subsection entitled �gAutomatic heating menu setting.�h) No automatic heating cycle specified = 0xFF<br><br>Name : Automatic heating menu setting<br>EPC : 0xD0<br>Data Type : unsigned cha<br>Data Size(Byte) : 1 bytes<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"OvenModeSetting","epc":"0xD1","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x43 (= oven), to specify the sub-mode to use, and to acquire the current setting.<br><br>Automatic selection mode = 0x40 Convection oven mode = 0x41 Circulation oven mode = 0x42 Hybrid oven mode = 0x43 No sub-mode specified = 0xFF<br><br>Name : Oven mode setting<br>EPC : 0xD1<br>Data Type : unsigned cha<br>Data Size(Byte) : 1 bytes<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"OvenPreheatingSetting","epc":"0xD5","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x43 (oven), to specify whether or not to preheat the chamber for the selected oven sub-mode, and to acquire the current setting.<br><br>With preheating = 0x41 Without preheating = 0x42 Not specified = 0xFF<br><br>Name : Oven preheating setting<br>EPC : 0xD5<br>Data Type : unsigned char<br>Data Size(Byte) : 1 bytes<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"FermentingModeSetting","epc":"0xD6","size":"1","announce":"undefined","set":"optional","get":"optional","doc":"Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x46 (= fermenting), to specify the sub-mode to use, and to acquire the current setting.<br><br>Automatic selection mode = 0x40 Convection fermentation mode = 0x41 Circulation fermentation mode = 0x42 Hybrid fermentation mode = 0x43 Microwave fermentation mode = 0x51 No mode specified = 0xFF<br><br>Name : Fermenting mode setting<br>EPC : 0xD6<br>Data Type : unsigned char<br>Data Size(Byte) : 1 bytes<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"ChamberTemperatureSetting","epc":"0xE3","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x43 (= oven) or 0x46 (= fermenting), to specify the temperature in the chamber in 0.1��C increments, and to acquire the current setting.<br><br>0xF554 to 0x7FFE (-273.2 to 3276.6��C) 0x8001: Automatic 0x8002: Not specified<br><br>Name : Chamber temperature setting<br>EPC : 0xE3<br>Data Type : <br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"FoodTemperatureSetting","epc":"0xE4","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the as-heated food temperature in 0.1��C increments, and to acquire the current setting.<br><br>0xF554 to 0x7FFE (-273.2 to 3276.6��) 0x8002: Not specified<br><br>Name : Food temperature setting<br>EPC : 0xE4<br>Data Type : <br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"HeatingTimeSetting","epc":"0xE5","size":"3","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the duration of heating in the HH:MM:SS format, and to acquire the current setting.<br><br>0 to 0x17: 0 to 0x3B: 0 to 0x3B (= 0 to 23) (= 0 to 59) (= 0 to 59)<br><br>Name : Heating time setting<br>EPC : 0xE5<br>Data Type : <br>Data Size(Byte) : 3<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"RemainingHeatingTimeSetting","epc":"0xE6","size":"3","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify the time remaining to complete the heating cycle in the HH:MM:SS format, and to acquire the current setting.<br><br>0 to 0x17: 0 to 0x3B: 0 to 0x3B (= 0 to 23) (= 0 to 59) (= 0 to 59)<br><br>Name : Remaining heating time setting<br>EPC : 0xE6<br>Data Type : <br>Data Size(Byte) : 3<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"MicrowaveHeatingPowerSetting","epc":"0xE7","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x41 (= microwave heating), 0x42 (= defrosting), 0x47 (= stewing) or 0x48 (= steaming) or when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x46 (= fermenting) and the value of the �gfermenting mode setting�h property (EPC = 0xD6) is 0x51 (= microwave fermentation mode), to specify the microwave heating power in 1W increments, and to acquire the current setting.<br><br>0x0000 to 0xFFFD (0 to 65533W)<br><br>Name : Microwave heating power setting<br>EPC : 0xE7<br>Data Type : <br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"PromptMessageSetting","epc":"0xE8","size":"8","announce":"undefined","set":"optional","get":"optional","doc":"Used, when it is necessary to instruct the combination microwave oven to temporarily stop heating at a point during a heating cycle to allow the user to perform manual reversing, mixing, etc. and display a message to instruct the user on the manual action to be performed, to specify the prompt message to be displayed and the timing of the message (in terms of a percentage of the total duration of the heating cycle that is allowed to elapse (from the start of the heating cycle) before the message is displayed), and to acquire the current settings. Up to 4 messages may be specified.<br><br>First byte: Prompt message code (See the prompt message code table in the subsection entitled �gPrompt message setting.�h) Second byte: Timing value (0 to 0x64 (0 to 100%))<br><br>Name : Prompt message setting<br>EPC : 0xE8<br>Data Type : <br>Data Size(Byte) : 8<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"GaccessoriesToCombinationMicrowaveOvenHSetting","epc":"0xE9","size":"2","announce":"undefined","set":"optional","get":"optional","doc":"Used to specify, by means of a 2-byte bit map, what accessory or accessories to the combination microwave oven to use, and to acquire the current setting.<br><br>The value contained in a bit in the bit map shall be �g1�h if the accessory represented by that bit is used and �g0�h if the accessory represented by that bit is not used (See the bitmap composition table in the subsection entitled �g�fAccessories to combination microwave oven�f setting�h).<br><br>Name : �gAccessories to combination microwave oven�h setting<br>EPC : 0xE9<br>Data Type : <br>Data Size(Byte) : 2<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"DisplayCharacterStringSetting","epc":"0xEA","size":"40","announce":"undefined","set":"optional","get":"undefined","doc":"Used to input character strings (up to 20 characters) to use on the display of the combination microwave oven.<br><br>Shift-JIS code characters x 20<br><br>Name : Display character string setting<br>EPC : 0xEA<br>Data Type : <br>Data Size(Byte) : 40<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : undefined<br>"},
		{"name":"TwoStageMicrowaveHeatingSettingDuration","epc":"0xEB","size":"6","announce":"undefined","set":"optional","get":"optional","doc":"Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x51 (two-stage microwave heating), to specify the duration of the first and second microwave heating cycles in the HH:MM:SS format, and to acquire the current setting. Three bytes shall be used for each heating cycle, with the first and second sets of bytes used for the first and second heating cycles, respectively.<br><br>Duration of first microwave heating cycle (first through third bytes): 0 to 0x17: 0 to 0x3B: 0 to 0x3B (= 0 to 23): (= 0 to 59): (= 0 to 59) Duration of second microwave heating cycle (fourth through sixth bytes): 0 to 0x17: 0 to 0x3B: 0 to 0x3B (= 0 to 23): (= 0 to 59): (= 0 to 59)<br><br>Name : Two-stage microwave heating setting (duration)<br>EPC : 0xEB<br>Data Type : <br>Data Size(Byte) : 6<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"},
		{"name":"TwoStageMicrowaveHeatingSettingHeatingPower","epc":"0xEC","size":"4","announce":"undefined","set":"optional","get":"optional","doc":"Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x51 (two-stage microwave heating), to specify the heating power for the first and second microwave heating cycles in 1W increments, and to acquire the current setting. Two bytes shall be used for each heating cycle, with the first and second pairs of bytes used for the first and second heating cycles, respectively.<br><br>Heating power for first microwave heating cycle (first and second bytes): 0x0000 to 0xFFFD (0 to 65533W) Heating power for second microwave heating cycle (third and fourth bytes): 0x0000 to 0xFFFD (0 to 65533W)<br><br>Name : Two-stage microwave heating setting (heating power)<br>EPC : 0xEC<br>Data Type : <br>Data Size(Byte) : 4<br><br>AccessRule<br>Announce : undefined<br>Set : optional<br>Get : optional<br>"}
	]
}