name: 'IRKit DevicePlugin Support Profile'
prefix: com.sonycsl.kadecot.gotapi
rpc:
  System:
    name: System
    procedure: system.get
    doc: "## System API\n\n| インターフェース名称 | Version | 種別    |\n| :--------- | :------ | :---- |\n| System API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートフォンのシステム情報を提供するAPI\nDevice Connect ManagerのバージョンやサポートするAPI一覧、インストールされているデバイスプラグイン一覧などのアプリケーション情報を取得する。\n\n| HTTPメソッド | URI            |\n| :------- | :------------- |\n| GET      | /gotapi/system |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n<table>\n  <tr>\n    <td><b>論理名</b></td>\n    <td colspan=\"2\" text-align=\"center\"><b>物理名</b></td>\n    <td><b>データ型</b></td>\n    <td><b>省略</b></td>\n    <td><b>設定値</b></td>\n  </tr>\n  <tr>\n    <td>処理結果</td>\n    <td colspan=\"2\" text-align=\"center\">result</td>\n    <td>number</td>\n    <td>-</td>\n    <td>0:正常応答<br>0以外:異常応答</td>\n  </tr>\n  <tr>\n    <td>バージョン</td>\n    <td colspan=\"2\" text-align=\"center\">version</td>\n    <td>string</td>\n    <td>-</td>\n    <td>Device Connect Manager バージョンの文字列。</td>\n  </tr>\n  <tr>\n    <td>サポートプロファイルリスト</td>\n    <td colspan=\"2\" text-align=\"center\">supports</td>\n    <td>string[]</td>\n    <td>-</td>\n    <td>サポートしているI/Fのプロファイル名一覧を格納する。</td>\n  </tr>\n  <tr>\n    <td>プラグイン一覧</td>\n    <td colspan=\"2\" text-align=\"center\">plugins</td>\n    <td>object[]</td>\n    <td>-</td>\n    <td>サポートしているプラグインの一覧を格納する。</td>\n  </tr>\n  <tr>\n    <td>属性値</td>\n    <td rowspan=\"5\"></td>\n    <td>id</td>\n    <td>string</td>\n    <td>-</td>\n    <td>デバイスプラグインを識別するID。</td>\n  </tr>\n  <tr>\n    <td>属性値</td>\n    <td>name</td>\n    <td>string</td>\n    <td>-</td>\n    <td>デバイスプラグイン名</td>\n  </tr>\n  <tr>\n    <td>属性値</td>\n    <td>version</td>\n    <td>string</td>\n    <td>-</td>\n    <td>デバイスプラグインのバージョン名</td>\n  </tr>\n  <tr>\n    <td>属性値</td>\n    <td>supports</td>\n    <td>string[]</td>\n    <td>-</td>\n    <td>デバイスプラグインのサポートするプロファイル名の配列。</td>\n  </tr>\n  <tr>\n    <td>属性値</td>\n    <td>packageName</td>\n    <td>string</td>\n    <td>○</td>\n    <td>デバイスプラグインのパッケージ名。</td>\n  </tr>\n\n</table>\n\n### リクエストサンプル\n\n    GET  http://localhost:4035/gotapi/system\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0,\n        \"version\":\"1.0\",\n        \"supports\":[\n            \"authorization\",\n            \"availability\",\n            \"servicediscovery\",\n        \t\"serviceinfomation\",\n            \"system\"\n        ],\n       \"plugins\": [\n           {\n               \"id\": \"xxx1.localhost.deviceconnect.org\",\n               \"name\": \"Exampleデバイスプラグイン\",\n               \"version\": \"1.0.0\",\n               \"supports\": [\n                   \"authorization\",\n                   \"battery\",\n                   \"servicediscovery\",\n                   \"serviceinfomation\",\n                   \"system\"\n               ],\n               \"packageName\": \"com.example.deviceplugin\"\n           },\n           {\n               \"id\": \"xxx2.localhost.deviceconnect.org\",\n               \"name\": \"Sampleデバイスプラグイン\",\n               \"version\": \"1.0.0\",\n               \"supports\": [\n                   \"authorization\",\n                   \"light\",\n                   \"servicediscovery\",\n                   \"serviceinfomation\",\n                   \"system\"\n               ],\n               \"packageName\": \"com.sample.deviceplugin\"\n           }\n       ]\n    }\n"
    docType: markdown
  DeviceSystemWakeUp_PUT:
    name: DeviceSystemWakeUp_PUT
    procedure: system.put
    params:
      interface:
        type: string
        const: true
        value: device/wakeup
      pluginId:
        type: string
        const: false
        value: ""
        required: true
    doc: "## Device System WakeUp API PUT\n\n| インターフェース名称               | Version | 種別    |\n| :----------------------- | :------ | :---- |\n| Device System WakeUp API | 2.0.0   | 同期I/F |\n\n### 概要\n\nデバイスプラグインの機能を有効にする。\nデバイスプラグインによっては、設定画面が起動してデバイスとの接続を行う。\n\n| HTTPメソッド | URI                          |\n| :------- | :--------------------------- |\n| PUT      | /gotapi/system/device/wakeup |\n\n| 論理名     | 物理名      | データ型   | 省略  | 設定値           |\n| :------ | :------- | :----- | :-- | :------------ |\n| プラグインID | pluginId | string | -   | 取得対象デバイスプラグイン |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n| 論理名  | 物理名    | データ型   | 省略  | 設定値                |\n| :--- | :----- | :----- | :-- | :----------------- |\n| 処理結果 | result | number | -   | 0:正常応答<br>0以外:異常応答 |\n\n### リクエストサンプル\n\n    PUT  http://localhost:4035/gotapi/system/device/wakeup\t\t\t\t\t```\n\n|PUTデータ|\n\\|:--\\|\n|pluginId=xxxxx.localhost.deviceconnect.org|\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0\n    }\n"
    docType: markdown
  SystemEventsUnregister:
    name: SystemEventsUnregister
    procedure: system.delete
    params:
      interface:
        type: string
        const: true
        value: events
      sessionKey:
        type: string
        const: false
        value: ""
        required: true
    doc: "## System Events Unregister API\n\n| インターフェース名称                  | Version | 種別    |\n| :-------------------------- | :------ | :---- |\n| System Event Unregister API | 2.0.0   | 同期I/F |\n\n### 概要\n\n指定されたセッションキーに紐づくイベントを一挙に解除する。\n\n| HTTPメソッド | URI                   |\n| :------- | :-------------------- |\n| DELETE   | /gotapi/system/events |\n\n| 論理名     | 物理名        | データ型   | 省略  | 設定値         |\n| :------ | :--------- | :----- | :-- | :---------- |\n| セッションID | sessionKey | string | -   | イベントセッションID |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n| 論理名  | 物理名    | データ型   | 省略  | 設定値                |\n| :--- | :----- | :----- | :-- | :----------------- |\n| 処理結果 | result | number | -   | 0:正常応答<br>0以外:異常応答 |\n\n### リクエストサンプル\n\n    DELETE  http://localhost:4035/gotapi/system/events?sessionKey=xxx&accessToken=xxxxx\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0\n    }\n"
    docType: markdown
  ServiceInformation:
    name: ServiceInformation
    procedure: serviceinformation.get
    params:
    doc: "## Service Information API\n\n| インターフェース名称              | Version | 種別    |\n| :---------------------- | :------ | :---- |\n| Service Information API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートフォンまたは周辺機器についての情報を提供するAPI。\nサポートするプロファイル一覧、ネットワークへの接続状態を取得する。\n\n| HTTPメソッド | URI                        |\n| :------- | :------------------------- |\n| GET      | /gotapi/serviceinformation |\n\n| 論理名    | 物理名       | データ型   | 省略  | 設定値          |\n| :----- | :-------- | :----- | :-- | :----------- |\n| サービスID | serviceId | string | -   | 取得対象スマートデバイス |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n<table>\n  <tr>\n    <td><b>論理名</b></td>\n    <td colspan=\"2\" text-align=\"center\"><b>物理名</b></td>\n    <td><b>データ型</b></td>\n    <td><b>省略</b></td>\n    <td><b>設定値</b></td>\n  </tr>\n\n  <tr>\n    <td>処理結果</td>\n    <td colspan=\"2\" text-align=\"center\">result</td>\n    <td>number</td>\n    <td>-</td>\n    <td>0:正常応答<br>0以外:異常応答</td>\n  </tr>\n  <tr>\n    <td>オブジェクト</td>\n    <td colspan=\"2\" text-align=\"center\">connect</td>\n    <td>object</td>\n    <td>-</td>\n    <td>デバイスプラグインの接続状態。</td>\n  </tr>\n  <tr>\n    <td>属性値</td>\n    <td rowspan=\"4\"></td>\n    <td >wifi</td>\n    <td>boolean</td>\n    <td>-</td>\n    <td>WiFiの接続状態。 WiFiを提供できない場合は無し。<br>false:OFF<br>true:ON</td>\n  </tr>\n  <tr>\n    <td>属性値</td>\n    <td >bluetooth</td>\n    <td>boolean</td>\n    <td>-</td>\n    <td>Bluetoothの接続状態。Bluetoothが提供できない場合は無し。<br>false:OFF<br>true:ON</td>\n  </tr>\n  <tr>\n    <td>属性値</td>\n    <td >nfc</td>\n    <td>boolean</td>\n    <td>-</td>\n    <td>NFCの接続状態。NFCが提供できない場合は無し。<br>false:OFF<br>true:ON</td>\n  </tr>\n  <tr>\n    <td>属性値</td>\n    <td >ble</td>\n    <td>boolean</td>\n    <td>-</td>\n    <td>BLEの接続状態。BLEが提供できない場合は無し。<br>false:OFF<br>true:ON</td>\n  </tr>\n  <tr>\n    <td>サポートプロファイルリスト</td>\n    <td colspan=\"2\" text-align=\"center\">supports</td>\n    <td>array</td>\n    <td>-</td>\n    <td>サポートしているプロファイル名の配列。</td>\n  </tr>\n</table>\n\n### リクエストサンプル\n\n    GET http://localhost:4035/gotapi/serviceinformation?servieId=localhost.deviceconnect.org&accessToken=xxxxx\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0,\n        \"connect\":{\n            \"wifi\":true\n        },\n        \"supports\":[\n            \"system\",\n            \"battery\",\n            \"vibration\"\n        ]\n    }\n"
    docType: markdown
  ServiceDiscovery:
    name: ServiceDiscovery
    procedure: servicediscovery.get
    doc: "## Service Discovery API\n\n| インターフェース名称            | Version | 種別    |\n| :-------------------- | :------ | :---- |\n| Service Discovery API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートデバイス検索機能を提供するAPI。\nDevice Connect Managerに接続されているスマートデバイス一覧を取得する。\n取得できる情報には、スマートデバイスへの接続するネットワーク、オンライン状態やデバイス固有のコンフィグ情報が格納されている。\n\n| HTTPメソッド | URI                      |\n| :------- | :----------------------- |\n| GET      | /gotapi/servicediscovery |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n<table>\n  <tr>\n    <td><b>論理名</b></td>\n    <td colspan=\"2\" text-align=\"center\"><b>物理名</b></td>\n    <td><b>データ型</b></td>\n    <td><b>省略</b></td>\n    <td><b>設定値</b></td>\n  </tr>\n  <tr>\n    <td>処理結果</td>\n    <td colspan=\"2\" text-align=\"center\">result</td>\n    <td>number</td>\n    <td>-</td>\n    <td>0:正常応答<br>0以外:異常応答</td>\n  </tr>\n\n  <tr>\n    <td>デバイス一覧</td>\n    <td colspan=\"2\" text-align=\"center\">services</td>\n    <td>object[]</td>\n    <td>-</td>\n    <td>デバイスデータ(object)の配列。</td>\n  </tr>\n  <tr>\n    <td>デバイスID</td>\n    <td rowspan=\"5\"></td>\n    <td >id</td>\n    <td>string</td>\n    <td>-</td>\n    <td>デバイスを識別するID。</td>\n  </tr>\n  <tr>\n    <td>デバイス名</td>\n    <td >name</td>\n    <td>string</td>\n    <td>-</td>\n    <td>デバイス名。</td>\n  </tr>\n  <tr>\n    <td>デバイスタイプ</td>\n    <td >type</td>\n    <td>string</td>\n    <td>-</td>\n    <td>デバイスへの接続するネットワークを示す。<br>WiFi<br>BLE<br>NFC<br>Bluetooth</td>\n  </tr>\n  <tr>\n    <td>ネットワーク接続状態</td>\n    <td >online</td>\n    <td>boolean</td>\n    <td>-</td>\n    <td>デバイスのオンライン状態を示す<br>true: オンライン<br>false: オフライン</td>\n  </tr>\n  <tr>\n    <td>コンフィグ</td>\n    <td >config</td>\n    <td>string</td>\n    <td>-</td>\n    <td>デバイスに設定がある場合には、ここに文字列としてデータが格納されている。</td>\n  </tr>\n</table>\n\n### リクエストサンプル\n\n    GET  http://localhost:4035/gotapi/servicediscovery?accessToken=xxxxx\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0,\n        \"services\":[\n            {\n                \"id\":\"device1.localhost.deviceconnect.org\",\n                \"name\":\"SW2\",\n                \"type\":\"Bluetooth\",\n                \"online\":true,\n                \"config\":\"\"\n            },\n            {\n                \"id\":\"device2.localhost.deviceconnect.org\",\n                \"name\":\"Hue\",\n                \"type\":\"WiFi\",\n                \"online\":false,\n                \"config\":\"\"\n            }\n        ]\n    }\n"
    docType: markdown
  RemoteControllerGet:
    name: RemoteControllerGet
    procedure: remote_controller.get
    params:
    doc: "## RemoteController Get API\n\n| インターフェース名称               | Version | 種別    |\n| :----------------------- | :------ | :---- |\n| RemoteController Get API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートデバイスが保持する赤外線などの信号を取得する。\n\n| HTTPメソッド | URI                       |\n| :------- | :------------------------ |\n| GET      | /gotapi/remote_controller |\n\n| 論理名    | 物理名       | データ型   | 省略  | 設定値      |\n| :----- | :-------- | :----- | :-- | :------- |\n| サービスID | serviceId | string | -   | 取得対象デバイス |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n| 論理名           | 物理名     | データ型   | 省略                 | 設定値 |\n| :------------ | :------ | :----- | :----------------- | :-- |\n| 処理結果          | result  | number | 0:正常応答<br>0以外:異常応答 |     |\n| メッセージ(赤外線など） | message | string | 赤外線などの信号。          |     |\n\n### リクエストサンプル\n\n    GET http://localhost:4035/gotapi/remote_controller?servieId=localhost.dconnect.com&accessToken=xxxx\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0,\n    \t“message”:”{data[18031,8755,1190,1190,1190,3341,1190,3341,1190,3341,1190,1190,1190,3341,1190,3341,1190,334 1,1190,3341,1190,3341,1190,3341,1190,1190,1190,1190,1190,1190,1190,1190,1190,3341,1190,3341,1190,1190,1190,3 341,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,1190,3341,1190,3341,1190 ,3341,1190,3341,1190,3341,1190,65535,0,9379,18031,4400,1190]}”\n    }\n"
    docType: markdown
  RemoteControllerSend:
    name: RemoteControllerSend
    procedure: remote_controller.post
    params:
      message:
        type: string
        const: false
        value: ""
        required: true
    doc: "## RemoteController Send API\n\n| インターフェース名称                | Version | 種別    |\n| :------------------------ | :------ | :---- |\n| RemoteController Send API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートデバイスに対して赤外線などの信号送信依頼を送る。\n\n| HTTPメソッド | URI                       |\n| :------- | :------------------------ |\n| POST     | /gotapi/remote_controller |\n\n| 論理名           | 物理名       | データ型   | 省略  | 設定値       |\n| :------------ | :-------- | :----- | :-- | :-------- |\n| サービスID        | serviceId | string | -   | 取得対象デバイス。 |\n| メッセージ(赤外線など) | message   | string | -   | 赤外線などの信号。 |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n| 論理名  | 物理名    | データ型   | 省略  | 設定値                |\n| :--- | :----- | :----- | :-- | :----------------- |\n| 処理結果 | result | number | -   | 0:正常応答<br>0以外:異常応答 |\n\n### リクエストサンプル\n\n    PUT http://localhost:4035/gotapi/remote_controller\n\n|PUTデータ|\n\\|:--\\|\n|serviceId=localhost.deviceconnect.org&pattern=100%2c%20100%2c%20100%2c%20100&accessToken=xxxxx&&message=%7Bdata %5B18031%2C8755%2C1190%2C1190%2C1190%2C3341%2C1190%2C3341%2C1190%2C3341%2C1190%2C1190 %2C1190%2C3341%2C1190%2C3341%2C1190%2C3341%2C1190%2C3341%2C1190%2C3341%2C1190%2C3341 %2C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2C3341%2C1190%2C3341% 2C1190%2C1190%2C1190%2C3341%2C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2 C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2C1190%2C3341%2C1190%2C3341%2C 1190%2C3341%2C1190%2C3341%2C1190%2C3341%2C1190%2C65535%2C0%2C9379%2C18031%2C4400%2C11 90%5D%7D|\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0\n    }\n"
    docType: markdown
  LightStatus:
    name: LightStatus
    procedure: light.get
    params:
    doc: "## Light Status API\n\n| インターフェース名称       | Version | 種別    |\n| :--------------- | :------ | :---- |\n| Light Status API | 2.0.0   | 同期I/F |\n\n### 概要\n\nライトを識別するIDなどを取得するAPI。\nスマートデバイスが認識しているライトデバイスの一覧を取得する。\n取得できる情報には、ライトの識別子、ライトの名前と状態を持つ。\n\n| HTTPメソッド | URI           |\n| :------- | :------------ |\n| GET      | /gotapi/light |\n\n| 論理名    | 物理名       | データ型   | 省略  | 設定値          |\n| :----- | :-------- | :----- | :-- | :----------- |\n| サービスID | serviceId | string | -   | 取得対象スマートデバイス |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n<table>\n  <tr>\n    <td><b>論理名</b></td>\n    <td colspan=\"2\" text-align=\"center\"><b>物理名</b></td>\n    <td><b>データ型</b></td>\n    <td><b>省略</b></td>\n    <td><b>設定値</b></td>\n  </tr>\n  <tr>\n    <td>処理結果</td>\n    <td colspan=\"2\" text-align=\"center\">result</td>\n    <td>number</td>\n    <td>-</td>\n    <td>0:正常応答<br>0以外:異常応答</td>\n  </tr>\n\n  <tr>\n    <td>ライト一覧</td>\n    <td colspan=\"2\" text-align=\"center\">lights</td>\n    <td>array</td>\n    <td>-</td>\n    <td>ライト一覧を格納する配列。</td>\n  </tr>\n  <tr>\n    <td>ライトID</td>\n    <td rowspan=\"4\"></td>\n    <td >lightId</td>\n    <td>string</td>\n    <td>-</td>\n    <td>ライトを識別するID。</td>\n  </tr>\n  <tr>\n    <td>ライト名</td>\n    <td>name</td>\n    <td>string</td>\n    <td>-</td>\n    <td>ライト名。</td>\n  </tr>\n  <tr>\n    <td>ライトの点灯状態</td>\n    <td >on</td>\n    <td>boolean</td>\n    <td>-</td>\n    <td>ライトの点灯状態を示す。<br>true: 点灯<br>false: 消灯</td>\n  </tr>\n  <tr>\n    <td>コンフィグ</td>\n    <td >config</td>\n    <td>string</td>\n    <td>-</td>\n    <td>ライトに設定がある場合には、ここに文字列としてデータが格納されている。</td>\n  </tr>\n</table>\n\n### リクエストサンプル\n\n    GET  http://localhost:4035/gotapi/light?servieId=localhost.dconnect.com&accessToken=xxxx\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0,\n        \"lights\":[\n            {\n                \"lightId\":\"0\",\n                \"name\":\"LightLamp1\",\n                \"on\":true,\n                \"config\":\"\"\n            },\n            {\n                \"lightId\":\"1\",\n                \"name\":\"LightLamp2\",\n                \"online\":false,\n                \"config\":\"\"\n            }\n        ]\n    }\n"
    docType: markdown
  LightOn:
    name: LightOn
    procedure: light.post
    params:
      lightId:
        type: string
        const: false
        value: ""
        required: true
      brightness:
        type: string
        const: false
        value: ""
        required: false
      color:
        type: string
        const: false
        value: ""
        required: false
      flashing:
        type: string
        const: false
        value: ""
        required: false
    doc: "## Light On API\n\n| インターフェース名称   | Version | 種別    |\n| :----------- | :------ | :---- |\n| Light On API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートデバイスが持つライトを点灯する。\n\n| HTTPメソッド | URI           |\n| :------- | :------------ |\n| POST     | /gotapi/light |\n\n| 論理名      | 物理名        | データ型   | 省略  | 設定値                                                            |\n| :------- | :--------- | :----- | :-- | :------------------------------------------------------------- |\n| サービスID   | serviceId  | string | -   | 対象スマートデバイス                                                     |\n| ライトID    | lightId    | string | -   | 対象ライト                                                          |\n| ライトの明るさ  | brightness | string | ○   | ライトの明るさを0.0-1.0で表す。                                            |\n| ライトの色    | color      | string | ○   | RGB形式の16進数で指定。                                                |\n| ライトの点滅間隔 | flashing   | string | ○   | 点滅間隔をカンマ区切りの msecで点灯、消灯を繰り返し指定できる。このパラメータを指定しなかった場合は、 常時点灯。 |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n| 論理名  | 物理名    | データ型   | 省略  | 設定値                |\n| :--- | :----- | :----- | :-- | :----------------- |\n| 処理結果 | result | number | -   | 0:正常応答<br>0以外:異常応答 |\n\n### リクエストサンプル\n\n    POST http://localhost:4035/gotapi/light\n\n|POSTデータ|\n\\|:--\\|\n|serviceId=localhost.deviceconnect.org&accessToken=xxxxx&lightId=1&color=FF0000|\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\": 0\n    }\n"
    docType: markdown
  LightOff:
    name: LightOff
    procedure: light.delete
    params:
      lightId:
        type: string
        const: false
        value: ""
        required: true
    doc: "## Light Off API\n\n| インターフェース名称    | Version | 種別    |\n| :------------ | :------ | :---- |\n| Light Off API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートデバイスが持つライトを消灯する。\n\n| HTTPメソッド | URI           |\n| :------- | :------------ |\n| DELETE   | /gotapi/light |\n\n| 論理名    | 物理名       | データ型   | 省略  | 設定値          |\n| :----- | :-------- | :----- | :-- | :----------- |\n| サービスID | serviceId | string | -   | 取得対象スマートデバイス |\n| ライトID  | lightId   | string | -   | 対象ライト        |\n\n### レスポンス\n\n| 論理名  | 物理名    | データ型   | 省略  | 設定値                |\n| :--- | :----- | :----- | :-- | :----------------- |\n| 処理結果 | result | number | -   | 0:正常応答<br>0以外:異常応答 |\n\n### リクエストサンプル\n\n    DELETE http://localhost:4035/gotapi/light?serviceId=localhost.deviceconnect.org&accessToken=xxxxx&lightId=1\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\": 0\n    }\n"
    docType: markdown
  TVPowerOn:
    name: TVPowerOn
    procedure: tv.put
    params:
    doc: "## TV Power On API\n\n| インターフェース名称      | Version | 種別    |\n| :-------------- | :------ | :---- |\n| TV Power On API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートデバイスの電源をオンにする。\n\n| HTTPメソッド | URI        |\n| :------- | :--------- |\n| PUT      | /gotapi/tv |\n\n| 論理名    | 物理名       | データ型   | 省略  | 設定値      |\n| :----- | :-------- | :----- | :-- | :------- |\n| サービスID | serviceId | string | -   | 取得対象デバイス |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n| 論理名  | 物理名    | データ型   | 省略  | 設定値                |\n| :--- | :----- | :----- | :-- | :----------------- |\n| 処理結果 | result | number | -   | 0:正常応答<br>0以外:異常応答 |\n\n### リクエストサンプル\n\n    PUT  http://localhost:4035/gotapi/tv\n\n|PUTデータ|\n\\|:--\\|\n|serviceId=localhost.deviceconnect.org&accessToken=xxxxx|\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0\n    }\n"
    docType: markdown
  TVPowerOff:
    name: TVPowerOff
    procedure: tv.delete
    params:
    doc: "## TV Power Off API\n\n| インターフェース名称       | Version | 種別    |\n| :--------------- | :------ | :---- |\n| TV Power Off API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートデバイスの電源をオフにする。\n\n| HTTPメソッド | URI        |\n| :------- | :--------- |\n| DELETE   | /gotapi/tv |\n\n| 論理名    | 物理名       | データ型   | 省略  | 設定値      |\n| :----- | :-------- | :----- | :-- | :------- |\n| サービスID | serviceId | string | -   | 取得対象デバイス |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n| 論理名  | 物理名    | データ型   | 省略  | 設定値                |\n| :--- | :----- | :----- | :-- | :----------------- |\n| 処理結果 | result | number | -   | 0:正常応答<br>0以外:異常応答 |\n\n### リクエストサンプル\n\n    DELETE  http://localhost:4035/gotapi/tv\n\n|DELETEデータ|\n\\|:--\\|\n|serviceId=localhost.deviceconnect.org&accessToken=xxxxx|\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0\n    }\n"
    docType: markdown
  TVChangeChannel:
    name: TVChangeChannel
    procedure: tv.put
    params:
      interface:
        type: string
        const: true
        value: channel
      tuning:
        type: string
        const: false
        value: ""
        required: false
      control:
        type: string
        const: false
        value: ""
        required: false
    doc: "## TV Change Channel API\n\n| インターフェース名称            | Version | 種別    |\n| :-------------------- | :------ | :---- |\n| TV Change Channel API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートデバイスのチャンネルを変更する。\n\n| HTTPメソッド | URI                |\n| :------- | :----------------- |\n| PUT      | /gotapi/tv/channel |\n\n| 論理名    | 物理名       | データ型   | 省略  | 設定値                            |\n| :----- | :-------- | :----- | :-- | :----------------------------- |\n| サービスID | serviceId | string | -   | 取得対象デバイス                       |\n| 選局     | tuning    | string | ○   | “1”〜”12”：チャンネル番号               |\n| 操作     | control   | string | ○   | “next”:次局選局<br>“previous”:前局選局 |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n| 論理名  | 物理名    | データ型   | 省略  | 設定値                |\n| :--- | :----- | :----- | :-- | :----------------- |\n| 処理結果 | result | number | -   | 0:正常応答<br>0以外:異常応答 |\n\n### リクエストサンプル\n\n    PUT  http://localhost:4035/gotapi/tv/channel\n\n|PUTデータ|\n\\|:--\\|\n|serviceId=localhost.deviceconnect.org&accessToken=xxxxx&action=next|\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0\n    }\n"
    docType: markdown
  TVChangeVolume:
    name: TVChangeVolume
    procedure: tv.put
    params:
      interface:
        type: string
        const: true
        value: volume
      control:
        type: string
        const: false
        value: ""
        required: true
    doc: "## TV Change Volume API\n\n| インターフェース名称           | Version | 種別    |\n| :------------------- | :------ | :---- |\n| TV Change Volume API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートデバイスの音量を変更する。\n\n| HTTPメソッド | URI               |\n| :------- | :---------------- |\n| PUT      | /gotapi/tv/volume |\n\n| 論理名    | 物理名       | データ型   | 省略  | 設定値                                |\n| :----- | :-------- | :----- | :-- | :--------------------------------- |\n| サービスID | serviceId | string | -   | 取得対象デバイス                           |\n| 操作     | control   | string | -   | “up”:ボリュームを上げる<br>“down”:ボリュームを下げる |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n| 論理名  | 物理名    | データ型   | 省略  | 設定値                |\n| :--- | :----- | :----- | :-- | :----------------- |\n| 処理結果 | result | number | -   | 0:正常応答<br>0以外:異常応答 |\n\n### リクエストサンプル\n\n    PUT  http://localhost:4035/gotapi/tv/volume\n\n|PUTデータ|\n\\|:--\\|\n|serviceId=localhost.deviceconnect.org&accessToken=xxxxx&action=up|\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0\n    }\n"
    docType: markdown
  TVChangeBroadcastWave:
    name: TVChangeBroadcastWave
    procedure: tv.put
    params:
      interface:
        type: string
        const: true
        value: broadcastwave
      select:
        type: string
        const: false
        value: ""
        required: true
    doc: "## TV Change Broadcast Wave API\n\n| インターフェース名称                   | Version | 種別    |\n| :--------------------------- | :------ | :---- |\n| TV Change Broadcast Wave API | 2.0.0   | 同期I/F |\n\n### 概要\n\nスマートデバイスの選択放送波を変更する。\n\n| HTTPメソッド | URI                      |\n| :------- | :----------------------- |\n| PUT      | /gotapi/tv/broadcastwave |\n\n| 論理名    | 物理名       | データ型   | 省略  | 設定値                                         |\n| :----- | :-------- | :----- | :-- | :------------------------------------------ |\n| サービスID | serviceId | string | -   | 取得対象デバイス                                    |\n| 放送波選択  | select    | string | -   | “DTV”:地上波デジタル放送<br>“BS”:BS放送波<br>“CS”:CS放送波 |\n\n### レスポンス\n\n| Content-Type     | 形式   | HTTPステータス |\n| :--------------- | :--- | :-------- |\n| application/json | JSON | 200       |\n\n| 論理名  | 物理名    | データ型   | 省略  | 設定値                |\n| :--- | :----- | :----- | :-- | :----------------- |\n| 処理結果 | result | number | -   | 0:正常応答<br>0以外:異常応答 |\n\n### リクエストサンプル\n\n    PUT  http://localhost:4035/gotapi/tv/broadcastwave\n\n|PUTデータ|\n\\|:--\\|\n|serviceId=localhost.deviceconnect.org&accessToken=xxxxx&select=DTV|\n\n### レスポンスサンプル\n\n    {\n        \"product\":\"Device Connect Manager\",\n        \"version\":\"x.x\",\n        \"result\":0\n    }\n"
    docType: markdown
