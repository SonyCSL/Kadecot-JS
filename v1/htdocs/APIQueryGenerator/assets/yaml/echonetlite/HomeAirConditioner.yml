name: HomeAirConditioner
prefix: com.sonycsl.kadecot.echonetlite
rpc:
  OperationStatusGet:
    procedure: get
    epc: 128
    size: '1'
    announce: undefined
    doc: "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: OperationStatus
  OperationStatusSet:
    procedure: set
    epc: 128
    size: '1'
    announce: undefined
    doc: "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: OperationStatus
      propertyValue:
        type: array
        const: false
        value:
          - 0
  InstallationLocationGet:
    procedure: get
    epc: 129
    size: '1'
    announce: undefined
    doc: "This property indicates the installation location\n\nSee “2.2 ‘Installation location’ property.”\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: InstallationLocation
  InstallationLocationSet:
    procedure: set
    epc: 129
    size: '1'
    announce: undefined
    doc: "This property indicates the installation location\n\nSee “2.2 ‘Installation location’ property.”\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: InstallationLocation
      propertyValue:
        type: array
        const: false
        value:
          - 0
  StandardVersionInformationGet:
    procedure: get
    epc: 130
    size: '4'
    announce: undefined
    doc: "This property indicates the version number of the corresponding standard.\n\nFirst byte: Fixed at 0x00 (for future reserved). \nSecond byte: Fixed at 0x00 (for future reserved). \nThird byte: Indicates the order of release in the ASCII format. \nFourth byte: Fixed at 0x00 (for future reserved).\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StandardVersionInformation
  StandardVersionInformationSet:
    procedure: set
    epc: 130
    size: '4'
    announce: undefined
    doc: "This property indicates the version number of the corresponding standard.\n\nFirst byte: Fixed at 0x00 (for future reserved). \nSecond byte: Fixed at 0x00 (for future reserved). \nThird byte: Indicates the order of release in the ASCII format. \nFourth byte: Fixed at 0x00 (for future reserved).\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StandardVersionInformation
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  IdentificationNumberGet:
    procedure: get
    epc: 131
    size: 9or17
    announce: undefined
    doc: "A number that allows each object to be uniquely identified.\n\nFirst byte: lower-layer communication ID field\n0x01－0xFD：This is a communication protocol used in the lower-layer communication and is set arbitrarily according to the protocol class in the case where unique number is assigned (not used in ECHONET Lite).\n0x11－0x1F: Power line Communication Protocol A and B systems\n0x31-0x3F: Designated low-powor radio\n0x41-0x4F: Extended HBS\n0x51-0x5F: IrDA\n0x61-0x6F: LonTalk®\n0x71-0x7F: BlueTooth\n0x81-0x8F: Ethernet\n0x91-0x9F: IEEE802.11/11B\n0xA1: Power line Communication Protocol C systems\n0xB2：IPv6/6LoWPAN\n0xFE：2－17 bytes are defined by the manufacturer, and are set according to the type.\n0xFF：2－9 bytes are defined when randomly generated protocol is used in the lower-layer communication.\n0x00：Identification number is not set.\nSecond and succeeding bytes: unique number field\n\nData Type : unsigned char\nData Size(Byte) : 9 or 17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: IdentificationNumber
  IdentificationNumberSet:
    procedure: set
    epc: 131
    size: 9or17
    announce: undefined
    doc: "A number that allows each object to be uniquely identified.\n\nFirst byte: lower-layer communication ID field\n0x01－0xFD：This is a communication protocol used in the lower-layer communication and is set arbitrarily according to the protocol class in the case where unique number is assigned (not used in ECHONET Lite).\n0x11－0x1F: Power line Communication Protocol A and B systems\n0x31-0x3F: Designated low-powor radio\n0x41-0x4F: Extended HBS\n0x51-0x5F: IrDA\n0x61-0x6F: LonTalk®\n0x71-0x7F: BlueTooth\n0x81-0x8F: Ethernet\n0x91-0x9F: IEEE802.11/11B\n0xA1: Power line Communication Protocol C systems\n0xB2：IPv6/6LoWPAN\n0xFE：2－17 bytes are defined by the manufacturer, and are set according to the type.\n0xFF：2－9 bytes are defined when randomly generated protocol is used in the lower-layer communication.\n0x00：Identification number is not set.\nSecond and succeeding bytes: unique number field\n\nData Type : unsigned char\nData Size(Byte) : 9 or 17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: IdentificationNumber
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  MeasuredInstantaneousPowerConsumptionGet:
    procedure: get
    epc: 132
    size: '2'
    announce: undefined
    doc: "This property indicates the instantaneous power consumption of the device in watts.\n\n0x0000-0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredInstantaneousPowerConsumption
  MeasuredInstantaneousPowerConsumptionSet:
    procedure: set
    epc: 132
    size: '2'
    announce: undefined
    doc: "This property indicates the instantaneous power consumption of the device in watts.\n\n0x0000-0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredInstantaneousPowerConsumption
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  MeasuredCumulativePowerConsumptionGet:
    procedure: get
    epc: 133
    size: '4'
    announce: undefined
    doc: "This property indicates the cumulative power consumption of the device in increments of 0.001kWh.\n\n0x0-0x3B9AC9FF（0-999,999.999kWh）\n\nData Type : unsigned long\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredCumulativePowerConsumption
  MeasuredCumulativePowerConsumptionSet:
    procedure: set
    epc: 133
    size: '4'
    announce: undefined
    doc: "This property indicates the cumulative power consumption of the device in increments of 0.001kWh.\n\n0x0-0x3B9AC9FF（0-999,999.999kWh）\n\nData Type : unsigned long\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredCumulativePowerConsumption
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  ManufacturersFaultCodeGet:
    procedure: get
    epc: 134
    size: Max225
    announce: undefined
    doc: "This property indicates the manufacturer-defined fault code.\n\nFirst byte: Indicates the data size of the fault code field.\nSecond to fourth bytes: Manufacturer code\nFifth and succeeding bytes: Field for manufacturer-defined fault code\n\nData Type : unsigned char×(MAX)225\nData Size(Byte) : Max 225\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturersFaultCode
  ManufacturersFaultCodeSet:
    procedure: set
    epc: 134
    size: Max225
    announce: undefined
    doc: "This property indicates the manufacturer-defined fault code.\n\nFirst byte: Indicates the data size of the fault code field.\nSecond to fourth bytes: Manufacturer code\nFifth and succeeding bytes: Field for manufacturer-defined fault code\n\nData Type : unsigned char×(MAX)225\nData Size(Byte) : Max 225\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturersFaultCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
  CurrentLimitSettingGet:
    procedure: get
    epc: 135
    size: '1'
    announce: undefined
    doc: "This property indicates the current limit setting (0-100%).\n0x00-0x64 （=0-100%）\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentLimitSetting
  CurrentLimitSettingSet:
    procedure: set
    epc: 135
    size: '1'
    announce: undefined
    doc: "This property indicates the current limit setting (0-100%).\n0x00-0x64 （=0-100%）\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentLimitSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  FaultStatusGet:
    procedure: get
    epc: 136
    size: '1'
    announce: undefined
    doc: "This property indicates whether a fault (e.g. a sensor trouble) has occurred or not.\n\nFault occurred＝0x41, No fault has occurred＝0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: FaultStatus
  FaultStatusSet:
    procedure: set
    epc: 136
    size: '1'
    announce: undefined
    doc: "This property indicates whether a fault (e.g. a sensor trouble) has occurred or not.\n\nFault occurred＝0x41, No fault has occurred＝0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: FaultStatus
      propertyValue:
        type: array
        const: false
        value:
          - 0
  FaultDescriptionGet:
    procedure: get
    epc: 137
    size: '2'
    announce: undefined
    doc: "Describes the fault.\n\nSee “2.5 ‘Fault Description’ Property.”\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: FaultDescription
  FaultDescriptionSet:
    procedure: set
    epc: 137
    size: '2'
    announce: undefined
    doc: "Describes the fault.\n\nSee “2.5 ‘Fault Description’ Property.”\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: FaultDescription
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  ManufacturerCodeGet:
    procedure: get
    epc: 138
    size: '3'
    announce: undefined
    doc: "3-byte manufacturer code\n\n(Defined by the ECHONET Consortium.)\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturerCode
  ManufacturerCodeSet:
    procedure: set
    epc: 138
    size: '3'
    announce: undefined
    doc: "3-byte manufacturer code\n\n(Defined by the ECHONET Consortium.)\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: ManufacturerCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
  ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCodeGet:
    procedure: get
    epc: 139
    size: '3'
    announce: undefined
    doc: "3-byte business facility code\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCode
  ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCodeSet:
    procedure: set
    epc: 139
    size: '3'
    announce: undefined
    doc: "3-byte business facility code\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×3\nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ￼￼￼￼￼￼￼￼￼￼￼￼BusinessFacilityCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
  ProductCodeGet:
    procedure: get
    epc: 140
    size: '12'
    announce: undefined
    doc: "Identifies the product usingASCI I code.\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductCode
  ProductCodeSet:
    procedure: set
    epc: 140
    size: '12'
    announce: undefined
    doc: "Identifies the product usingASCI I code.\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductCode
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  ProductionNumberGet:
    procedure: get
    epc: 141
    size: '12'
    announce: undefined
    doc: "This property indicates the production number using ASCI I code.\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionNumber
  ProductionNumberSet:
    procedure: set
    epc: 141
    size: '12'
    announce: undefined
    doc: "This property indicates the production number using ASCI I code.\n\n（Defined by each manufacturer.）\n\nData Type : unsigned char×12\nData Size(Byte) : 12\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionNumber
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  ProductionDateGet:
    procedure: get
    epc: 142
    size: '4'
    announce: undefined
    doc: "4-byte production date code\n\nThis property indicates the product ion date in the YYMD format (1 character = 1 byte) .\nYY： Year (e.g. 1999＝ 0x07CF)\nM： Month (e.g. December＝0x0C)\nD： Day (e.g. 20th＝ 0x14)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionDate
  ProductionDateSet:
    procedure: set
    epc: 142
    size: '4'
    announce: undefined
    doc: "4-byte production date code\n\nThis property indicates the product ion date in the YYMD format (1 character = 1 byte) .\nYY： Year (e.g. 1999＝ 0x07CF)\nM： Month (e.g. December＝0x0C)\nD： Day (e.g. 20th＝ 0x14)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: ProductionDate
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  PowerSavingOperationSettingGet:
    procedure: get
    epc: 143
    size: '1'
    announce: undefined
    doc: "This property indicates whether the device is operating in power-saving mode.\n\nOperating in power-saving mode =0x41\nOperating in normal operation mode =0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerSavingOperationSetting
  PowerSavingOperationSettingSet:
    procedure: set
    epc: 143
    size: '1'
    announce: undefined
    doc: "This property indicates whether the device is operating in power-saving mode.\n\nOperating in power-saving mode =0x41\nOperating in normal operation mode =0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerSavingOperationSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  PositionInformationGet:
    procedure: get
    epc: 147
    size: '16'
    announce: undefined
    doc: "This property indicates the latitude, longitude and altitude of the installation location.\n\nData Type : unsigned char×16\nData Size(Byte) : 16\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: PositionInformation
  PositionInformationSet:
    procedure: set
    epc: 147
    size: '16'
    announce: undefined
    doc: "This property indicates the latitude, longitude and altitude of the installation location.\n\nData Type : unsigned char×16\nData Size(Byte) : 16\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: PositionInformation
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  CurrentTimeSettingGet:
    procedure: get
    epc: 151
    size: '2'
    announce: undefined
    doc: "Current time (HH：MM format)\n\n0x00-0x17：0x00-0x3B（ ＝ 0-23）：（ ＝ 0-59）\n\nData Type : unsigned char×2\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentTimeSetting
  CurrentTimeSettingSet:
    procedure: set
    epc: 151
    size: '2'
    announce: undefined
    doc: "Current time (HH：MM format)\n\n0x00-0x17：0x00-0x3B（ ＝ 0-23）：（ ＝ 0-59）\n\nData Type : unsigned char×2\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentTimeSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  CurrentDateSettingGet:
    procedure: get
    epc: 152
    size: '4'
    announce: undefined
    doc: "Current date (YYYY：MM：DD format)\n\n1 ～ 0x270F ： 1 ～ 0x0C ： 1 ～ 0x1F (=1 ～ 9999) ： (=1 ～ 12) ： (=1 ～ 31)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentDateSetting
  CurrentDateSettingSet:
    procedure: set
    epc: 152
    size: '4'
    announce: undefined
    doc: "Current date (YYYY：MM：DD format)\n\n1 ～ 0x270F ： 1 ～ 0x0C ： 1 ～ 0x1F (=1 ～ 9999) ： (=1 ～ 12) ： (=1 ～ 31)\n\nData Type : unsigned char×4\nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CurrentDateSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
  PowerLimitSettingGet:
    procedure: get
    epc: 153
    size: '2'
    announce: undefined
    doc: "This property indicates the power limit setting in watts.\n\n0x0000~0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerLimitSetting
  PowerLimitSettingSet:
    procedure: set
    epc: 153
    size: '2'
    announce: undefined
    doc: "This property indicates the power limit setting in watts.\n\n0x0000~0xFFFF（0-65535W）\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: PowerLimitSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  CumulativeOperatingTimeGet:
    procedure: get
    epc: 154
    size: '5'
    announce: undefined
    doc: "This property indicates the cumulative number of days, hours, minutes or seconds for which the device has operated, using 1 byte for the unit and 4 bytes for the time.\n\nFirst byte: Indicates the unit.\nSecond： 0x41; Minute： 0x42; Hour： 0x43; Day:0x44\nSecond to fifth bytes ：\nIndicates the elapsed time in the unit specified by the first byte. 0x00000000-0xFFFFFFFF (0-4294967295)\n\nData Type : unsigned char + unsigned long\nData Size(Byte) : 1+4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CumulativeOperatingTime
  CumulativeOperatingTimeSet:
    procedure: set
    epc: 154
    size: '5'
    announce: undefined
    doc: "This property indicates the cumulative number of days, hours, minutes or seconds for which the device has operated, using 1 byte for the unit and 4 bytes for the time.\n\nFirst byte: Indicates the unit.\nSecond： 0x41; Minute： 0x42; Hour： 0x43; Day:0x44\nSecond to fifth bytes ：\nIndicates the elapsed time in the unit specified by the first byte. 0x00000000-0xFFFFFFFF (0-4294967295)\n\nData Type : unsigned char + unsigned long\nData Size(Byte) : 1+4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: CumulativeOperatingTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
  StatusChangeAnnouncementPropertyMapGet:
    procedure: get
    epc: 157
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StatusChangeAnnouncementPropertyMap
  StatusChangeAnnouncementPropertyMapSet:
    procedure: set
    epc: 157
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: StatusChangeAnnouncementPropertyMap
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SetPropertyMapGet:
    procedure: get
    epc: 158
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: SetPropertyMap
  SetPropertyMapSet:
    procedure: set
    epc: 158
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: SetPropertyMap
      propertyValue:
        type: array
        const: false
        value:
          - 0
  GetPropertyMapGet:
    procedure: get
    epc: 159
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: GetPropertyMap
  GetPropertyMapSet:
    procedure: set
    epc: 159
    size: Max17
    announce: undefined
    doc: "See Appendix 1.\n\nData Type : unsigned char×(MAX17)\nData Size(Byte) : Max.17\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: GetPropertyMap
      propertyValue:
        type: array
        const: false
        value:
          - 0
  OperationModeSettingGet:
    procedure: get
    epc: 176
    size: '1'
    announce: undefined
    doc: "Used to specify the operation mode ( gautomatic, h  gcooling, h  gheating, h  gdehumidification, h  gair circulator h or  gother h), and to acquire the current setting.\n\nThe following values shall be used: Automatic: 0x41 Cooling: 0x42 Heating: 0x43 Dehumidification: 0x44 Air circulator: 0x45 Other: 0x40\n\nName : Operation mode setting\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: OperationModeSetting
  OperationModeSettingSet:
    procedure: set
    epc: 176
    size: '1'
    announce: undefined
    doc: "Used to specify the operation mode ( gautomatic, h  gcooling, h  gheating, h  gdehumidification, h  gair circulator h or  gother h), and to acquire the current setting.\n\nThe following values shall be used: Automatic: 0x41 Cooling: 0x42 Heating: 0x43 Dehumidification: 0x44 Air circulator: 0x45 Other: 0x40\n\nName : Operation mode setting\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change"
    params:
      propertyName:
        type: string
        const: true
        value: OperationModeSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AutomaticTemperatureControlSettingGet:
    procedure: get
    epc: 177
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the automatic temperature control function, and to acquire the current setting.\n\nAutomatic = 0x41 Non-automatic = 0x42\n\nName : Automatic temperature control setting\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AutomaticTemperatureControlSetting
  AutomaticTemperatureControlSettingSet:
    procedure: set
    epc: 177
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the automatic temperature control function, and to acquire the current setting.\n\nAutomatic = 0x41 Non-automatic = 0x42\n\nName : Automatic temperature control setting\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AutomaticTemperatureControlSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  NormalHighSpeedSilentOperationSettingGet:
    procedure: get
    epc: 178
    size: '1'
    announce: undefined
    doc: "Used to specify the type of operation ( gnormal, h  ghigh-speed h or  gsilent h), and to acquire the current setting.\n\nNormal operation: 0x41 High-speed operation: 0x42 Silent operation: 0x43\n\nName : Normal/high- speed/silent operation setting\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: NormalHighSpeedSilentOperationSetting
  NormalHighSpeedSilentOperationSettingSet:
    procedure: set
    epc: 178
    size: '1'
    announce: undefined
    doc: "Used to specify the type of operation ( gnormal, h  ghigh-speed h or  gsilent h), and to acquire the current setting.\n\nNormal operation: 0x41 High-speed operation: 0x42 Silent operation: 0x43\n\nName : Normal/high- speed/silent operation setting\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: NormalHighSpeedSilentOperationSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SetTemperatureValueGet:
    procedure: get
    epc: 179
    size: '1'
    announce: undefined
    doc: "Used to set the temperature and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value\nEPC : 0xB3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: SetTemperatureValue
  SetTemperatureValueSet:
    procedure: set
    epc: 179
    size: '1'
    announce: undefined
    doc: "Used to set the temperature and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value\nEPC : 0xB3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory"
    params:
      propertyName:
        type: string
        const: true
        value: SetTemperatureValue
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SetValueOfRelativeHumidityInDehumidifyingModeGet:
    procedure: get
    epc: 180
    size: '1'
    announce: undefined
    doc: "Used to set the relative humidity for the  gdehumidification h mode and to acquire the current setting.\n\n0x00 to 0x64 (0 to 100%)\n\nName : Set value of relative humidity in dehumidifying mode\nEPC : 0xB4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetValueOfRelativeHumidityInDehumidifyingMode
  SetValueOfRelativeHumidityInDehumidifyingModeSet:
    procedure: set
    epc: 180
    size: '1'
    announce: undefined
    doc: "Used to set the relative humidity for the  gdehumidification h mode and to acquire the current setting.\n\n0x00 to 0x64 (0 to 100%)\n\nName : Set value of relative humidity in dehumidifying mode\nEPC : 0xB4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetValueOfRelativeHumidityInDehumidifyingMode
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SetTemperatureValueInCoolingModeGet:
    procedure: get
    epc: 181
    size: '1'
    announce: undefined
    doc: "Used to set the temperature for the  gcooling h mode and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value in cooling mode\nEPC : 0xB5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetTemperatureValueInCoolingMode
  SetTemperatureValueInCoolingModeSet:
    procedure: set
    epc: 181
    size: '1'
    announce: undefined
    doc: "Used to set the temperature for the  gcooling h mode and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value in cooling mode\nEPC : 0xB5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetTemperatureValueInCoolingMode
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SetTemperatureValueInHeatingModeGet:
    procedure: get
    epc: 182
    size: '1'
    announce: undefined
    doc: "Used to set the temperature for the  gheating h mode and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value in heating mode\nEPC : 0xB6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetTemperatureValueInHeatingMode
  SetTemperatureValueInHeatingModeSet:
    procedure: set
    epc: 182
    size: '1'
    announce: undefined
    doc: "Used to set the temperature for the  gheating h mode and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value in heating mode\nEPC : 0xB6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetTemperatureValueInHeatingMode
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SetTemperatureValueInDehumidifyingModeGet:
    procedure: get
    epc: 183
    size: '1'
    announce: undefined
    doc: "Used to set the temperature for the  gdehumidification h mode and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value in dehumidifying mode\nEPC : 0xB7\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetTemperatureValueInDehumidifyingMode
  SetTemperatureValueInDehumidifyingModeSet:
    procedure: set
    epc: 183
    size: '1'
    announce: undefined
    doc: "Used to set the temperature for the  gdehumidification h mode and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value in dehumidifying mode\nEPC : 0xB7\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetTemperatureValueInDehumidifyingMode
      propertyValue:
        type: array
        const: false
        value:
          - 0
  RatedPowerConsumptionGet:
    procedure: get
    epc: 184
    size: '8'
    announce: undefined
    doc: "Rated power consumption in each operation mode of cooling/heating/dehumidifying/blast\n\n0x0000.0xFFFD (0.65533W) Cooling: heating: dehumidifying: blast\n\nName : Rated power consumption\nEPC : 0xB8\nData Type : unsigned short x 4\nData Size(Byte) : 8 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: RatedPowerConsumption
  RatedPowerConsumptionSet:
    procedure: set
    epc: 184
    size: '8'
    announce: undefined
    doc: "Rated power consumption in each operation mode of cooling/heating/dehumidifying/blast\n\n0x0000.0xFFFD (0.65533W) Cooling: heating: dehumidifying: blast\n\nName : Rated power consumption\nEPC : 0xB8\nData Type : unsigned short x 4\nData Size(Byte) : 8 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: RatedPowerConsumption
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  MeasuredValueOfCurrentConsumptionGet:
    procedure: get
    epc: 185
    size: '2'
    announce: undefined
    doc: "Measured value of current consumption\n\n0x0000.0xFFFD (0.6553.3A)\n\nName : Measured value of current consumption\nEPC : 0xB9\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredValueOfCurrentConsumption
  MeasuredValueOfCurrentConsumptionSet:
    procedure: set
    epc: 185
    size: '2'
    announce: undefined
    doc: "Measured value of current consumption\n\n0x0000.0xFFFD (0.6553.3A)\n\nName : Measured value of current consumption\nEPC : 0xB9\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredValueOfCurrentConsumption
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  MeasuredValueOfRoomRelativeHumidityGet:
    procedure: get
    epc: 186
    size: '1'
    announce: undefined
    doc: "Measured value of room relative humidity\n\n0x00.0x64 (0.100. C)\n\nName : Measured value of room relative humidity\nEPC : 0xBA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredValueOfRoomRelativeHumidity
  MeasuredValueOfRoomRelativeHumiditySet:
    procedure: set
    epc: 186
    size: '1'
    announce: undefined
    doc: "Measured value of room relative humidity\n\n0x00.0x64 (0.100. C)\n\nName : Measured value of room relative humidity\nEPC : 0xBA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredValueOfRoomRelativeHumidity
      propertyValue:
        type: array
        const: false
        value:
          - 0
  MeasuredValueOfRoomTemperatureGet:
    procedure: get
    epc: 187
    size: '1'
    announce: undefined
    doc: "Measured value of room temperature\n\n0x80.0x7D (-127.125.C)\n\nName : Measured value of room temperature\nEPC : 0xBB\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredValueOfRoomTemperature
  MeasuredValueOfRoomTemperatureSet:
    procedure: set
    epc: 187
    size: '1'
    announce: undefined
    doc: "Measured value of room temperature\n\n0x80.0x7D (-127.125.C)\n\nName : Measured value of room temperature\nEPC : 0xBB\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredValueOfRoomTemperature
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SetTemperatureValueOfUserRemoteControlGet:
    procedure: get
    epc: 188
    size: '1'
    announce: undefined
    doc: "Set temperature value of user remote control\n\n0x00.0x32 (0.50.C)\n\nName : Set temperature value of user remote control\nEPC : 0xBC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetTemperatureValueOfUserRemoteControl
  SetTemperatureValueOfUserRemoteControlSet:
    procedure: set
    epc: 188
    size: '1'
    announce: undefined
    doc: "Set temperature value of user remote control\n\n0x00.0x32 (0.50.C)\n\nName : Set temperature value of user remote control\nEPC : 0xBC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SetTemperatureValueOfUserRemoteControl
      propertyValue:
        type: array
        const: false
        value:
          - 0
  MeasuredCooledAirTemperatureGet:
    procedure: get
    epc: 189
    size: '1'
    announce: undefined
    doc: "This property indicates the measured cooled air temperature at the outlet.\n\n0x81 to 0x7D (-127 to 125  C)\n\nName : Measured cooled air temperature\nEPC : 0xBD\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredCooledAirTemperature
  MeasuredCooledAirTemperatureSet:
    procedure: set
    epc: 189
    size: '1'
    announce: undefined
    doc: "This property indicates the measured cooled air temperature at the outlet.\n\n0x81 to 0x7D (-127 to 125  C)\n\nName : Measured cooled air temperature\nEPC : 0xBD\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredCooledAirTemperature
      propertyValue:
        type: array
        const: false
        value:
          - 0
  MeasuredOutdoorAirTemperatureGet:
    procedure: get
    epc: 190
    size: '1'
    announce: undefined
    doc: "This property indicates the measured outdoor air temperature.\n\n0x81 to 0x7D (-127 to 125  C)\n\nName : Measured outdoor air temperature\nEPC : 0xBE\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredOutdoorAirTemperature
  MeasuredOutdoorAirTemperatureSet:
    procedure: set
    epc: 190
    size: '1'
    announce: undefined
    doc: "This property indicates the measured outdoor air temperature.\n\n0x81 to 0x7D (-127 to 125  C)\n\nName : Measured outdoor air temperature\nEPC : 0xBE\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MeasuredOutdoorAirTemperature
      propertyValue:
        type: array
        const: false
        value:
          - 0
  RelativeTemperatureSettingGet:
    procedure: get
    epc: 191
    size: '1'
    announce: undefined
    doc: "Used to set the relative temperature relative to the target temperature for an air conditioner operation mode, and to acquire the current setting.\n\n0x81 to 0x7D (-12.7  C to 12.5  C)\n\nName : Relative temperature setting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: RelativeTemperatureSetting
  RelativeTemperatureSettingSet:
    procedure: set
    epc: 191
    size: '1'
    announce: undefined
    doc: "Used to set the relative temperature relative to the target temperature for an air conditioner operation mode, and to acquire the current setting.\n\n0x81 to 0x7D (-12.7  C to 12.5  C)\n\nName : Relative temperature setting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: RelativeTemperatureSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AirFlowRateSettingGet:
    procedure: get
    epc: 160
    size: '1'
    announce: undefined
    doc: "Used to specify the air flow rate or use the function to automatically control the air flow rate, and to acquire the current setting. The air flow rate shall be selected from among the 8 predefined levels.\n\nAutomatic air flow rate control function used = 0x41 Air flow rate = 0x31 to 0x38\n\nName : Air flow rate setting\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirFlowRateSetting
  AirFlowRateSettingSet:
    procedure: set
    epc: 160
    size: '1'
    announce: undefined
    doc: "Used to specify the air flow rate or use the function to automatically control the air flow rate, and to acquire the current setting. The air flow rate shall be selected from among the 8 predefined levels.\n\nAutomatic air flow rate control function used = 0x41 Air flow rate = 0x31 to 0x38\n\nName : Air flow rate setting\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirFlowRateSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AutomaticControlOfAirFlowDirectionSettingGet:
    procedure: get
    epc: 161
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the automatic air flow direction control function, to specify the plane(s) (vertical and/or horizontal) in which the automatic air flow direction control function is to be used, and to acquire the current setting.\n\nAutomatic = 0x41, non-automatic = 0x42, automatic (vertical) = 0x43, automatic (horizontal) = 0x44\n\nName : Automatic control of air flow direction setting\nEPC : 0xA1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AutomaticControlOfAirFlowDirectionSetting
  AutomaticControlOfAirFlowDirectionSettingSet:
    procedure: set
    epc: 161
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the automatic air flow direction control function, to specify the plane(s) (vertical and/or horizontal) in which the automatic air flow direction control function is to be used, and to acquire the current setting.\n\nAutomatic = 0x41, non-automatic = 0x42, automatic (vertical) = 0x43, automatic (horizontal) = 0x44\n\nName : Automatic control of air flow direction setting\nEPC : 0xA1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AutomaticControlOfAirFlowDirectionSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AutomaticSwingOfAirFlowSettingGet:
    procedure: get
    epc: 163
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the automatic air flow swing function, to specify the plane(s) (vertical and/or horizontal) in which the automatic air flow swing function is to be used, and to acquire the current setting.\n\nAutomatic air flow swing function not used = 0x31, used (vertical) = 0x41, used (horizontal) = 0x42, used (vertical and horizontal) = 0x43\n\nName : Automatic swing of air flow setting\nEPC : 0xA3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AutomaticSwingOfAirFlowSetting
  AutomaticSwingOfAirFlowSettingSet:
    procedure: set
    epc: 163
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the automatic air flow swing function, to specify the plane(s) (vertical and/or horizontal) in which the automatic air flow swing function is to be used, and to acquire the current setting.\n\nAutomatic air flow swing function not used = 0x31, used (vertical) = 0x41, used (horizontal) = 0x42, used (vertical and horizontal) = 0x43\n\nName : Automatic swing of air flow setting\nEPC : 0xA3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AutomaticSwingOfAirFlowSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AirFlowDirectionVerticalSettingGet:
    procedure: get
    epc: 164
    size: '1'
    announce: undefined
    doc: "Used to specify the air flow direction in the vertical plane by selecting a pattern from among the 5 predefined patterns, and to acquire the current setting.\n\nUppermost = 0x41, lowermost = 0x42, central = 0x43, midpoint between uppermost and central = 0x44, midpoint between lowermost and central = 0x45\n\nName : Air flow direction (vertical) setting\nEPC : 0xA4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirFlowDirectionVerticalSetting
  AirFlowDirectionVerticalSettingSet:
    procedure: set
    epc: 164
    size: '1'
    announce: undefined
    doc: "Used to specify the air flow direction in the vertical plane by selecting a pattern from among the 5 predefined patterns, and to acquire the current setting.\n\nUppermost = 0x41, lowermost = 0x42, central = 0x43, midpoint between uppermost and central = 0x44, midpoint between lowermost and central = 0x45\n\nName : Air flow direction (vertical) setting\nEPC : 0xA4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirFlowDirectionVerticalSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AirFlowDirectionHorizontalSettingGet:
    procedure: get
    epc: 165
    size: '1'
    announce: undefined
    doc: "Used to specify the air flow direction(s) in the horizontal plane by selecting a pattern from among the 31 predefined patterns, and to acquire the current setting.\n\nRightward = 0x41, leftward = 0x42, central = 0x43, rightward and leftward = 0x44 (for a full list of the predefined patterns, see the table in the subsection defining the detailed requirements for this property.\n\nName : Air flow direction (horizontal) setting\nEPC : 0xA5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirFlowDirectionHorizontalSetting
  AirFlowDirectionHorizontalSettingSet:
    procedure: set
    epc: 165
    size: '1'
    announce: undefined
    doc: "Used to specify the air flow direction(s) in the horizontal plane by selecting a pattern from among the 31 predefined patterns, and to acquire the current setting.\n\nRightward = 0x41, leftward = 0x42, central = 0x43, rightward and leftward = 0x44 (for a full list of the predefined patterns, see the table in the subsection defining the detailed requirements for this property.\n\nName : Air flow direction (horizontal) setting\nEPC : 0xA5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirFlowDirectionHorizontalSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SpecialStateGet:
    procedure: get
    epc: 170
    size: '1'
    announce: undefined
    doc: "This property indicates if the air conditioner is in a  gspecial h state (i.e. the  gdefrosting, h  gpreheating, h or  gheat removal h state).\n\n gNormal operation h state = 0x40,  gDefrosting h state = 0x41,  gPreheating h state = 0x42,  gHeat removal h state = 0x43\n\nName : Special state\nEPC : 0xAA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SpecialState
  SpecialStateSet:
    procedure: set
    epc: 170
    size: '1'
    announce: undefined
    doc: "This property indicates if the air conditioner is in a  gspecial h state (i.e. the  gdefrosting, h  gpreheating, h or  gheat removal h state).\n\n gNormal operation h state = 0x40,  gDefrosting h state = 0x41,  gPreheating h state = 0x42,  gHeat removal h state = 0x43\n\nName : Special state\nEPC : 0xAA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SpecialState
      propertyValue:
        type: array
        const: false
        value:
          - 0
  NonPriorityStateGet:
    procedure: get
    epc: 171
    size: '1'
    announce: undefined
    doc: "Used to indicate when the air conditioner is in a  gnon-priority h state.\n\n gNormal operation h state = 0x40,  gNon-priority h state = 0x41\n\nName : Non-priority state\nEPC : 0xAB\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: NonPriorityState
  NonPriorityStateSet:
    procedure: set
    epc: 171
    size: '1'
    announce: undefined
    doc: "Used to indicate when the air conditioner is in a  gnon-priority h state.\n\n gNormal operation h state = 0x40,  gNon-priority h state = 0x41\n\nName : Non-priority state\nEPC : 0xAB\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: NonPriorityState
      propertyValue:
        type: array
        const: false
        value:
          - 0
  VentilationFunctionSettingGet:
    procedure: get
    epc: 192
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the ventilation function, to specify the ventilation direction, and to acquire the current setting.\n\nVentilation function ON (outlet direction) = 0x41, ventilation function OFF = 0x42, ventilation function ON (intake direction) = 0x43\n\nName : Ventilation function setting\nEPC : 0xC0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: VentilationFunctionSetting
  VentilationFunctionSettingSet:
    procedure: set
    epc: 192
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the ventilation function, to specify the ventilation direction, and to acquire the current setting.\n\nVentilation function ON (outlet direction) = 0x41, ventilation function OFF = 0x42, ventilation function ON (intake direction) = 0x43\n\nName : Ventilation function setting\nEPC : 0xC0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: VentilationFunctionSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  HumidifierFunctionSettingGet:
    procedure: get
    epc: 193
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the humidifier function, and to acquire the current setting.\n\nHumidifier function ON = 0x41, Humidifier function OFF = 0x42\n\nName : Humidifier function setting\nEPC : 0xC1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: HumidifierFunctionSetting
  HumidifierFunctionSettingSet:
    procedure: set
    epc: 193
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the humidifier function, and to acquire the current setting.\n\nHumidifier function ON = 0x41, Humidifier function OFF = 0x42\n\nName : Humidifier function setting\nEPC : 0xC1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: HumidifierFunctionSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  VentilationAirFlowRateSettingGet:
    procedure: get
    epc: 194
    size: '1'
    announce: undefined
    doc: "Used to specify the ventilation air flow rate by selecting a level from among the predefined levels, and to acquire the current setting.\n\nAutomatic control of ventilation air flow rate = 0x41, ventilation air flow rate = 0x31 to 0x38\n\nName : Ventilation air flow rate setting\nEPC : 0xC2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: VentilationAirFlowRateSetting
  VentilationAirFlowRateSettingSet:
    procedure: set
    epc: 194
    size: '1'
    announce: undefined
    doc: "Used to specify the ventilation air flow rate by selecting a level from among the predefined levels, and to acquire the current setting.\n\nAutomatic control of ventilation air flow rate = 0x41, ventilation air flow rate = 0x31 to 0x38\n\nName : Ventilation air flow rate setting\nEPC : 0xC2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: VentilationAirFlowRateSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  DegreeOfHumidificationSettingGet:
    procedure: get
    epc: 196
    size: '1'
    announce: undefined
    doc: "Used to specify the degree of humidification to achieve by selecting a level from among the predefined levels, and to acquire the current setting.\n\nAutomatic control of the degree of humidification = 0x41 Degree of humidification = 0x31 to 0x38\n\nName : Degree of humidification setting\nEPC : 0xC4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: DegreeOfHumidificationSetting
  DegreeOfHumidificationSettingSet:
    procedure: set
    epc: 196
    size: '1'
    announce: undefined
    doc: "Used to specify the degree of humidification to achieve by selecting a level from among the predefined levels, and to acquire the current setting.\n\nAutomatic control of the degree of humidification = 0x41 Degree of humidification = 0x31 to 0x38\n\nName : Degree of humidification setting\nEPC : 0xC4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: DegreeOfHumidificationSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  MountedAirCleaningMethodGet:
    procedure: get
    epc: 198
    size: '1'
    announce: undefined
    doc: "A bitmap indicates mounted method of exercising air cleaning function.\n\nBit 0: Information about electrical dust collection method mounting 0 - Not mounted 1 - Mounted Bit 1: Information about cluster ion method mounting 0 - Not mounted 1 . Mounted\n\nName : Mounted air cleaning method\nEPC : 0xC6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MountedAirCleaningMethod
  MountedAirCleaningMethodSet:
    procedure: set
    epc: 198
    size: '1'
    announce: undefined
    doc: "A bitmap indicates mounted method of exercising air cleaning function.\n\nBit 0: Information about electrical dust collection method mounting 0 - Not mounted 1 - Mounted Bit 1: Information about cluster ion method mounting 0 - Not mounted 1 . Mounted\n\nName : Mounted air cleaning method\nEPC : 0xC6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MountedAirCleaningMethod
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AirPurifierFunctionSettingGet:
    procedure: get
    epc: 199
    size: '8'
    announce: undefined
    doc: "An 8-byte array used to specify, for each type of air purifier function, whether or not to use the air purifier function and the degree of air purification to achieve with the air purifier function, and to acquire the current settings.\n\nElement 0: Indicates whether or not to use the electrical dust collection-based air purifier function. Element 1: Indicates whether or not to use the cluster ion-based air purifier function. Elements 2 to 7: Reserved for future use.\n\nName : Air purifier function setting\nEPC : 0xC7\nData Type : unsigned char x 8\nData Size(Byte) : 8 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirPurifierFunctionSetting
  AirPurifierFunctionSettingSet:
    procedure: set
    epc: 199
    size: '8'
    announce: undefined
    doc: "An 8-byte array used to specify, for each type of air purifier function, whether or not to use the air purifier function and the degree of air purification to achieve with the air purifier function, and to acquire the current settings.\n\nElement 0: Indicates whether or not to use the electrical dust collection-based air purifier function. Element 1: Indicates whether or not to use the cluster ion-based air purifier function. Elements 2 to 7: Reserved for future use.\n\nName : Air purifier function setting\nEPC : 0xC7\nData Type : unsigned char x 8\nData Size(Byte) : 8 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirPurifierFunctionSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  MountedAirRefreshMethodGet:
    procedure: get
    epc: 200
    size: '1'
    announce: undefined
    doc: "A bitmap indicates mounted method for exercising refresh function.\n\nBit 0: Information about minus ion method mounting 0 - Not mounted 1 - Mounted Bit 1: Information about cluster ion method mounting 0 - Not mounted 1 . Mounted\n\nName : Mounted air refresh method\nEPC : 0xC8\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MountedAirRefreshMethod
  MountedAirRefreshMethodSet:
    procedure: set
    epc: 200
    size: '1'
    announce: undefined
    doc: "A bitmap indicates mounted method for exercising refresh function.\n\nBit 0: Information about minus ion method mounting 0 - Not mounted 1 - Mounted Bit 1: Information about cluster ion method mounting 0 - Not mounted 1 . Mounted\n\nName : Mounted air refresh method\nEPC : 0xC8\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MountedAirRefreshMethod
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AirRefresherFunctionSettingGet:
    procedure: get
    epc: 201
    size: '8'
    announce: undefined
    doc: "An 8-byte array used to specify, for each type of air refresher function, whether or not to use the air refresher function and the degree of air refreshing to achieve with the air refresher function, and to acquire the current settings.\n\nElement 0: Indicates whether or not to use the minus ion-based air refresher function. Element 1: Indicates whether or not to use the cluster ion-based air refresher function. Elements 2 to 7: Reserved for future use.\n\nName : Air refresher function setting\nEPC : 0xC9\nData Type : unsigned char x 8\nData Size(Byte) : 8 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirRefresherFunctionSetting
  AirRefresherFunctionSettingSet:
    procedure: set
    epc: 201
    size: '8'
    announce: undefined
    doc: "An 8-byte array used to specify, for each type of air refresher function, whether or not to use the air refresher function and the degree of air refreshing to achieve with the air refresher function, and to acquire the current settings.\n\nElement 0: Indicates whether or not to use the minus ion-based air refresher function. Element 1: Indicates whether or not to use the cluster ion-based air refresher function. Elements 2 to 7: Reserved for future use.\n\nName : Air refresher function setting\nEPC : 0xC9\nData Type : unsigned char x 8\nData Size(Byte) : 8 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirRefresherFunctionSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  MountedSelfCleaningMethodGet:
    procedure: get
    epc: 202
    size: '1'
    announce: undefined
    doc: "A bitmap indicates mounted method for exercising self-cleaning function.\n\nBit 0: Information about ozone cleaning method mounting 0 - Not mounted 1 - Mounted Bit 1: Information about drying method mounting 0 - Not mounted 1 . Mounted\n\nName : Mounted self-cleaning method\nEPC : 0xCA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MountedSelfCleaningMethod
  MountedSelfCleaningMethodSet:
    procedure: set
    epc: 202
    size: '1'
    announce: undefined
    doc: "A bitmap indicates mounted method for exercising self-cleaning function.\n\nBit 0: Information about ozone cleaning method mounting 0 - Not mounted 1 - Mounted Bit 1: Information about drying method mounting 0 - Not mounted 1 . Mounted\n\nName : Mounted self-cleaning method\nEPC : 0xCA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: MountedSelfCleaningMethod
      propertyValue:
        type: array
        const: false
        value:
          - 0
  SelfCleaningFunctionSettingGet:
    procedure: get
    epc: 203
    size: '8'
    announce: undefined
    doc: "An 8-byte array used to specify, for each type of self-cleaning function, whether or not to use the self-cleaning function and the degree of self-cleaning to achieve with the self-cleaning function, and to acquire the current settings.\n\nElement 0: Indicates whether or not to use the ozone-based self-cleaning function. Element 1: Indicates whether or not to use the drying-based self-cleaning function. Elements 2 to 7: Reserved for future use.\n\nName : Self-cleaning function setting\nEPC : 0xCB\nData Type : unsigned char x 8\nData Size(Byte) : 8 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SelfCleaningFunctionSetting
  SelfCleaningFunctionSettingSet:
    procedure: set
    epc: 203
    size: '8'
    announce: undefined
    doc: "An 8-byte array used to specify, for each type of self-cleaning function, whether or not to use the self-cleaning function and the degree of self-cleaning to achieve with the self-cleaning function, and to acquire the current settings.\n\nElement 0: Indicates whether or not to use the ozone-based self-cleaning function. Element 1: Indicates whether or not to use the drying-based self-cleaning function. Elements 2 to 7: Reserved for future use.\n\nName : Self-cleaning function setting\nEPC : 0xCB\nData Type : unsigned char x 8\nData Size(Byte) : 8 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SelfCleaningFunctionSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
  SpecialFunctionSettingGet:
    procedure: get
    epc: 204
    size: '1'
    announce: undefined
    doc: "Used to specify the  gspecial function h to use, and to acquire the current setting.\n\nNo setting: 0x40, clothes dryer function: 0x41, condensation suppressor function: 0x42, mite and mold control function: 0x43, active defrosting function: 0x44 0x45 . : Reserved for future use.\n\nName : Special function setting\nEPC : 0xCC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SpecialFunctionSetting
  SpecialFunctionSettingSet:
    procedure: set
    epc: 204
    size: '1'
    announce: undefined
    doc: "Used to specify the  gspecial function h to use, and to acquire the current setting.\n\nNo setting: 0x40, clothes dryer function: 0x41, condensation suppressor function: 0x42, mite and mold control function: 0x43, active defrosting function: 0x44 0x45 . : Reserved for future use.\n\nName : Special function setting\nEPC : 0xCC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: SpecialFunctionSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  OperationStatusOfComponentsGet:
    procedure: get
    epc: 205
    size: '1'
    announce: undefined
    doc: "This property indicates the operation status of components of the air conditioner in a bitmap format.\n\nBit 0: Operation status of the compressor: 0: Not operating 1: In operation Bit 1: Operation status of the thermostat: 0: Thermostat OFF 1: Thermostat ON Bits 2 to 7: Reserved for future use.\n\nName : Operation status of components\nEPC : 0xCD\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OperationStatusOfComponents
  OperationStatusOfComponentsSet:
    procedure: set
    epc: 205
    size: '1'
    announce: undefined
    doc: "This property indicates the operation status of components of the air conditioner in a bitmap format.\n\nBit 0: Operation status of the compressor: 0: Not operating 1: In operation Bit 1: Operation status of the thermostat: 0: Thermostat OFF 1: Thermostat ON Bits 2 to 7: Reserved for future use.\n\nName : Operation status of components\nEPC : 0xCD\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OperationStatusOfComponents
      propertyValue:
        type: array
        const: false
        value:
          - 0
  ThermostatSettingOverrideFunctionGet:
    procedure: get
    epc: 206
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to allow the air conditioner to operate ignoring its thermostat setting.\n\nNormal setting = 0x40, thermostat setting override function ON = 0x41, thermostat setting override function OFF = 0x42\n\nName : Thermostat setting override function\nEPC : 0xCE\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined"
    params:
      propertyName:
        type: string
        const: true
        value: ThermostatSettingOverrideFunction
  ThermostatSettingOverrideFunctionSet:
    procedure: set
    epc: 206
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to allow the air conditioner to operate ignoring its thermostat setting.\n\nNormal setting = 0x40, thermostat setting override function ON = 0x41, thermostat setting override function OFF = 0x42\n\nName : Thermostat setting override function\nEPC : 0xCE\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined"
    params:
      propertyName:
        type: string
        const: true
        value: ThermostatSettingOverrideFunction
      propertyValue:
        type: array
        const: false
        value:
          - 0
  AirPurificationModeSettingGet:
    procedure: get
    epc: 207
    size: '1'
    announce: undefined
    doc: "Used to set the air purification mode seting ON/OFF and to acquire the current setting. B\n\nAir purification ON  0x41,OFF   0x42\n\nName : Air purification mode setting\nEPC : 0xCF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirPurificationModeSetting
  AirPurificationModeSettingSet:
    procedure: set
    epc: 207
    size: '1'
    announce: undefined
    doc: "Used to set the air purification mode seting ON/OFF and to acquire the current setting. B\n\nAir purification ON  0x41,OFF   0x42\n\nName : Air purification mode setting\nEPC : 0xCF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: AirPurificationModeSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  OnTimerBasedReservationSettingGet:
    procedure: get
    epc: 144
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the ON timer (time-based reservation function, relative time-based reservation function or both), and to acquire the current setting.\n\nBoth the time- and relative time-based reservation functions are ON = 0x41, both reservation functions are OFF = 0x42, time-based reservation function is ON = 0x43, relative time-based reservation function is ON = 0x44\n\nName : ON timer-based reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerBasedReservationSetting
  OnTimerBasedReservationSettingSet:
    procedure: set
    epc: 144
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the ON timer (time-based reservation function, relative time-based reservation function or both), and to acquire the current setting.\n\nBoth the time- and relative time-based reservation functions are ON = 0x41, both reservation functions are OFF = 0x42, time-based reservation function is ON = 0x43, relative time-based reservation function is ON = 0x44\n\nName : ON timer-based reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerBasedReservationSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  OnTimerSettingTimeGet:
    procedure: get
    epc: 145
    size: '2'
    announce: undefined
    doc: "Used to specify the time for the time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting (time)\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerSettingTime
  OnTimerSettingTimeSet:
    procedure: set
    epc: 145
    size: '2'
    announce: undefined
    doc: "Used to specify the time for the time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting (time)\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerSettingTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  OnTimerSettingRelativeTimeGet:
    procedure: get
    epc: 146
    size: '2'
    announce: undefined
    doc: "Used to specify the relative time for the relative time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)\n\nName : ON timer setting (relative time)\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerSettingRelativeTime
  OnTimerSettingRelativeTimeSet:
    procedure: set
    epc: 146
    size: '2'
    announce: undefined
    doc: "Used to specify the relative time for the relative time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)\n\nName : ON timer setting (relative time)\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OnTimerSettingRelativeTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  OffTimerBasedReservationSettingGet:
    procedure: get
    epc: 148
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the OFF timer (time-based reservation function, relative time-based reservation function or both), and to acquire the current setting.\n\nBoth the time- and relative time-based reservation functions are ON = 0x41, both reservation functions are OFF = 0x42, time-based reservation function is ON = 0x43, relative time-based reservation function is ON = 0x44\n\nName : OFF timer-based reservation setting\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OffTimerBasedReservationSetting
  OffTimerBasedReservationSettingSet:
    procedure: set
    epc: 148
    size: '1'
    announce: undefined
    doc: "Used to specify whether or not to use the OFF timer (time-based reservation function, relative time-based reservation function or both), and to acquire the current setting.\n\nBoth the time- and relative time-based reservation functions are ON = 0x41, both reservation functions are OFF = 0x42, time-based reservation function is ON = 0x43, relative time-based reservation function is ON = 0x44\n\nName : OFF timer-based reservation setting\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OffTimerBasedReservationSetting
      propertyValue:
        type: array
        const: false
        value:
          - 0
  OffTimerSettingTimeGet:
    procedure: get
    epc: 149
    size: '2'
    announce: undefined
    doc: "Used to specify the time for the time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : OFF timer setting (time)\nEPC : 0x95\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OffTimerSettingTime
  OffTimerSettingTimeSet:
    procedure: set
    epc: 149
    size: '2'
    announce: undefined
    doc: "Used to specify the time for the time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : OFF timer setting (time)\nEPC : 0x95\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OffTimerSettingTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0
  OffTimerSettingRelativeTimeGet:
    procedure: get
    epc: 150
    size: '2'
    announce: undefined
    doc: "Used to specify the relative time for the relative time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)\n\nName : OFF timer setting (relative time)\nEPC : 0x96\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OffTimerSettingRelativeTime
  OffTimerSettingRelativeTimeSet:
    procedure: set
    epc: 150
    size: '2'
    announce: undefined
    doc: "Used to specify the relative time for the relative time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)\n\nName : OFF timer setting (relative time)\nEPC : 0x96\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional"
    params:
      propertyName:
        type: string
        const: true
        value: OffTimerSettingRelativeTime
      propertyValue:
        type: array
        const: false
        value:
          - 0
          - 0

